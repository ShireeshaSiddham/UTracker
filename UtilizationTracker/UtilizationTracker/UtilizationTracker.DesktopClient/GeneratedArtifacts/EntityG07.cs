

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class HoursPerDay : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the HoursPerDay entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HoursPerDay()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HoursPerDay(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.HoursPerDay> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.HoursPerDay.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HoursPerDay_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HoursPerDay_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return global::LightSwitchApplication.HoursPerDay.DetailsClass.GetValue(this, global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.c_Date);
            }
            set
            {
                global::LightSwitchApplication.HoursPerDay.DetailsClass.SetValue(this, global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.c_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MonthName
        {
            get
            {
                return global::LightSwitchApplication.HoursPerDay.DetailsClass.GetValue(this, global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.MonthName);
            }
            set
            {
                global::LightSwitchApplication.HoursPerDay.DetailsClass.SetValue(this, global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.MonthName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmpID
        {
            get
            {
                return global::LightSwitchApplication.HoursPerDay.DetailsClass.GetValue(this, global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.HoursPerDay.DetailsClass.SetValue(this, global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Expr1
        {
            get
            {
                return global::LightSwitchApplication.HoursPerDay.DetailsClass.GetValue(this, global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.Expr1);
            }
            set
            {
                global::LightSwitchApplication.HoursPerDay.DetailsClass.SetValue(this, global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.Expr1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Expr1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Expr1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Expr1_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.HoursPerDay,
                global::LightSwitchApplication.HoursPerDay.DetailsClass,
                global::LightSwitchApplication.HoursPerDay.DetailsClass.IImplementation,
                global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.c_Date;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass>.Entry
                __HoursPerDayEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass>.Entry(
                    global::LightSwitchApplication.HoursPerDay.DetailsClass.__HoursPerDay_CreateNew,
                    global::LightSwitchApplication.HoursPerDay.DetailsClass.__HoursPerDay_Created,
                    global::LightSwitchApplication.HoursPerDay.DetailsClass.__HoursPerDay_AllowSaveWithErrors);
            private static global::LightSwitchApplication.HoursPerDay __HoursPerDay_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.HoursPerDay> es)
            {
                return new global::LightSwitchApplication.HoursPerDay(es);
            }
            private static void __HoursPerDay_Created(global::LightSwitchApplication.HoursPerDay e)
            {
                e.HoursPerDay_Created();
            }
            private static bool __HoursPerDay_AllowSaveWithErrors(global::LightSwitchApplication.HoursPerDay e)
            {
                bool result = false;
                e.HoursPerDay_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.DateTime> c_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.c_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, string> MonthName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.MonthName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, int> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.Nullable<decimal>> Expr1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties.Expr1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.DateTime c_Date { get; set; }
                new string MonthName { get; set; }
                new int EmpID { get; set; }
                new global::System.Nullable<decimal> Expr1 { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.DateTime>.Entry
                    c_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.DateTime>.Entry(
                        "c_Date",
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._c_Date_Stub,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._c_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._c_Date_Validate,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._c_Date_GetImplementationValue,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._c_Date_SetImplementationValue,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._c_Date_OnValueChanged);
                private static void _c_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HoursPerDay.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.HoursPerDay.DetailsClass d, object sf)
                {
                    c(d, ref d._c_Date, sf);
                }
                private static bool _c_Date_ComputeIsReadOnly(global::LightSwitchApplication.HoursPerDay e)
                {
                    bool result = false;
                    e.c_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _c_Date_Validate(global::LightSwitchApplication.HoursPerDay e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.c_Date_Validate(r);
                }
                private static global::System.DateTime _c_Date_GetImplementationValue(global::LightSwitchApplication.HoursPerDay.DetailsClass d)
                {
                    return d.ImplementationEntity.c_Date;
                }
                private static void _c_Date_SetImplementationValue(global::LightSwitchApplication.HoursPerDay.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.c_Date = global::LightSwitchApplication.HoursPerDay.DetailsClass.TruncateDate(v);
                }
                private static void _c_Date_OnValueChanged(global::LightSwitchApplication.HoursPerDay e)
                {
                    e.c_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, string>.Entry
                    MonthName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, string>.Entry(
                        "MonthName",
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._MonthName_Stub,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._MonthName_ComputeIsReadOnly,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._MonthName_Validate,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._MonthName_GetImplementationValue,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._MonthName_SetImplementationValue,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._MonthName_OnValueChanged);
                private static void _MonthName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HoursPerDay.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, string>.Data> c, global::LightSwitchApplication.HoursPerDay.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthName, sf);
                }
                private static bool _MonthName_ComputeIsReadOnly(global::LightSwitchApplication.HoursPerDay e)
                {
                    bool result = false;
                    e.MonthName_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthName_Validate(global::LightSwitchApplication.HoursPerDay e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthName_Validate(r);
                }
                private static string _MonthName_GetImplementationValue(global::LightSwitchApplication.HoursPerDay.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthName;
                }
                private static void _MonthName_SetImplementationValue(global::LightSwitchApplication.HoursPerDay.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MonthName = v;
                }
                private static void _MonthName_OnValueChanged(global::LightSwitchApplication.HoursPerDay e)
                {
                    e.MonthName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, int>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, int>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HoursPerDay.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, int>.Data> c, global::LightSwitchApplication.HoursPerDay.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.HoursPerDay e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.HoursPerDay e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static int _EmpID_GetImplementationValue(global::LightSwitchApplication.HoursPerDay.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.HoursPerDay.DetailsClass d, int v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.HoursPerDay e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Expr1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Expr1",
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._Expr1_Stub,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._Expr1_ComputeIsReadOnly,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._Expr1_Validate,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._Expr1_GetImplementationValue,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._Expr1_SetImplementationValue,
                        global::LightSwitchApplication.HoursPerDay.DetailsClass.PropertySetProperties._Expr1_OnValueChanged);
                private static void _Expr1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HoursPerDay.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.HoursPerDay.DetailsClass d, object sf)
                {
                    c(d, ref d._Expr1, sf);
                }
                private static bool _Expr1_ComputeIsReadOnly(global::LightSwitchApplication.HoursPerDay e)
                {
                    bool result = false;
                    e.Expr1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Expr1_Validate(global::LightSwitchApplication.HoursPerDay e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Expr1_Validate(r);
                }
                private static global::System.Nullable<decimal> _Expr1_GetImplementationValue(global::LightSwitchApplication.HoursPerDay.DetailsClass d)
                {
                    return d.ImplementationEntity.Expr1;
                }
                private static void _Expr1_SetImplementationValue(global::LightSwitchApplication.HoursPerDay.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Expr1 = v;
                }
                private static void _Expr1_OnValueChanged(global::LightSwitchApplication.HoursPerDay e)
                {
                    e.Expr1_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.DateTime>.Data _c_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, string>.Data _MonthName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, int>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HoursPerDay, global::LightSwitchApplication.HoursPerDay.DetailsClass, global::System.Nullable<decimal>>.Data _Expr1;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class Months : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Months entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Months()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Months(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Months> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Months.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Months_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Months_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MonthID
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.MonthID);
            }
            set
            {
                global::LightSwitchApplication.Months.DetailsClass.SetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.MonthID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MonthName
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.MonthName);
            }
            set
            {
                global::LightSwitchApplication.Months.DetailsClass.SetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.MonthName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NoOfDays
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.NoOfDays);
            }
            set
            {
                global::LightSwitchApplication.Months.DetailsClass.SetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.NoOfDays, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfDays_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfDays_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfDays_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int WeekDays
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.WeekDays);
            }
            set
            {
                global::LightSwitchApplication.Months.DetailsClass.SetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.WeekDays, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekDays_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekDays_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WeekDays_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Holidays
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.Holidays);
            }
            set
            {
                global::LightSwitchApplication.Months.DetailsClass.SetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.Holidays, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TotalHours
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.TotalHours);
            }
            set
            {
                global::LightSwitchApplication.Months.DetailsClass.SetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.TotalHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> WorkingDays
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.WorkingDays);
            }
            set
            {
                global::LightSwitchApplication.Months.DetailsClass.SetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.WorkingDays, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkingDays_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkingDays_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkingDays_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Year
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.Year);
            }
            set
            {
                global::LightSwitchApplication.Months.DetailsClass.SetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.Year, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Year_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Year_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Year_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int WorkingDay
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.WorkingDay);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkingDay_Compute(ref int result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkingDay_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TotalHour
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.TotalHour);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHour_Compute(ref int result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHour_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.EmployeeMonth> EmployeeMonths
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.EmployeeMonths);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeMonth> EmployeeMonthsQuery
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetQuery(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.EmployeeMonths);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.EmployeeProject> EmployeeProjects
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetValue(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.EmployeeProjects);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeProject> EmployeeProjectsQuery
        {
            get
            {
                return global::LightSwitchApplication.Months.DetailsClass.GetQuery(this, global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.EmployeeProjects);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Months,
                global::LightSwitchApplication.Months.DetailsClass,
                global::LightSwitchApplication.Months.DetailsClass.IImplementation,
                global::LightSwitchApplication.Months.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.MonthID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass>.Entry
                __MonthsEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass>.Entry(
                    global::LightSwitchApplication.Months.DetailsClass.__Months_CreateNew,
                    global::LightSwitchApplication.Months.DetailsClass.__Months_Created,
                    global::LightSwitchApplication.Months.DetailsClass.__Months_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Months __Months_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Months> es)
            {
                return new global::LightSwitchApplication.Months(es);
            }
            private static void __Months_Created(global::LightSwitchApplication.Months e)
            {
                e.Months_Created();
            }
            private static bool __Months_AllowSaveWithErrors(global::LightSwitchApplication.Months e)
            {
                bool result = false;
                e.Months_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Months.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int> MonthID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.MonthID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, string> MonthName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.MonthName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int> NoOfDays
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.NoOfDays) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int> WeekDays
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.WeekDays) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int> Holidays
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.Holidays) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>> TotalHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.TotalHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>> WorkingDays
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.WorkingDays) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int> Year
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.Year) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int> WorkingDay
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.WorkingDay) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int> TotalHour
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.TotalHour) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeMonth> EmployeeMonths
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.EmployeeMonths) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeMonth>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeProject> EmployeeProjects
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.EmployeeProjects) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeProject>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int MonthID { get; set; }
                new string MonthName { get; set; }
                new int NoOfDays { get; set; }
                new int WeekDays { get; set; }
                new int Holidays { get; set; }
                new global::System.Nullable<int> TotalHours { get; set; }
                new global::System.Nullable<int> WorkingDays { get; set; }
                new int Year { get; set; }
                new global::System.Collections.IEnumerable EmployeeMonths { get; }
                new global::System.Collections.IEnumerable EmployeeProjects { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry
                    MonthID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry(
                        "MonthID",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthID_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthID_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthID_GetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthID_SetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthID_OnValueChanged);
                private static void _MonthID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthID, sf);
                }
                private static bool _MonthID_ComputeIsReadOnly(global::LightSwitchApplication.Months e)
                {
                    bool result = false;
                    e.MonthID_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthID_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthID_Validate(r);
                }
                private static int _MonthID_GetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthID;
                }
                private static void _MonthID_SetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MonthID = v;
                }
                private static void _MonthID_OnValueChanged(global::LightSwitchApplication.Months e)
                {
                    e.MonthID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, string>.Entry
                    MonthName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, string>.Entry(
                        "MonthName",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthName_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthName_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthName_GetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthName_SetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._MonthName_OnValueChanged);
                private static void _MonthName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, string>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthName, sf);
                }
                private static bool _MonthName_ComputeIsReadOnly(global::LightSwitchApplication.Months e)
                {
                    bool result = false;
                    e.MonthName_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthName_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthName_Validate(r);
                }
                private static string _MonthName_GetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthName;
                }
                private static void _MonthName_SetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MonthName = v;
                }
                private static void _MonthName_OnValueChanged(global::LightSwitchApplication.Months e)
                {
                    e.MonthName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry
                    NoOfDays = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry(
                        "NoOfDays",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._NoOfDays_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._NoOfDays_ComputeIsReadOnly,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._NoOfDays_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._NoOfDays_GetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._NoOfDays_SetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._NoOfDays_OnValueChanged);
                private static void _NoOfDays_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._NoOfDays, sf);
                }
                private static bool _NoOfDays_ComputeIsReadOnly(global::LightSwitchApplication.Months e)
                {
                    bool result = false;
                    e.NoOfDays_IsReadOnly(ref result);
                    return result;
                }
                private static void _NoOfDays_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NoOfDays_Validate(r);
                }
                private static int _NoOfDays_GetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.NoOfDays;
                }
                private static void _NoOfDays_SetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NoOfDays = v;
                }
                private static void _NoOfDays_OnValueChanged(global::LightSwitchApplication.Months e)
                {
                    e.NoOfDays_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry
                    WeekDays = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry(
                        "WeekDays",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WeekDays_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WeekDays_ComputeIsReadOnly,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WeekDays_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WeekDays_GetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WeekDays_SetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WeekDays_OnValueChanged);
                private static void _WeekDays_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._WeekDays, sf);
                }
                private static bool _WeekDays_ComputeIsReadOnly(global::LightSwitchApplication.Months e)
                {
                    bool result = false;
                    e.WeekDays_IsReadOnly(ref result);
                    return result;
                }
                private static void _WeekDays_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WeekDays_Validate(r);
                }
                private static int _WeekDays_GetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.WeekDays;
                }
                private static void _WeekDays_SetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d, int v)
                {
                    d.ImplementationEntity.WeekDays = v;
                }
                private static void _WeekDays_OnValueChanged(global::LightSwitchApplication.Months e)
                {
                    e.WeekDays_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry
                    Holidays = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry(
                        "Holidays",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Holidays_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Holidays_ComputeIsReadOnly,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Holidays_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Holidays_GetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Holidays_SetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Holidays_OnValueChanged);
                private static void _Holidays_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._Holidays, sf);
                }
                private static bool _Holidays_ComputeIsReadOnly(global::LightSwitchApplication.Months e)
                {
                    bool result = false;
                    e.Holidays_IsReadOnly(ref result);
                    return result;
                }
                private static void _Holidays_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Holidays_Validate(r);
                }
                private static int _Holidays_GetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.Holidays;
                }
                private static void _Holidays_SetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Holidays = v;
                }
                private static void _Holidays_OnValueChanged(global::LightSwitchApplication.Months e)
                {
                    e.Holidays_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>.Entry
                    TotalHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TotalHours",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHours_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHours_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHours_GetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHours_SetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHours_OnValueChanged);
                private static void _TotalHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalHours, sf);
                }
                private static bool _TotalHours_ComputeIsReadOnly(global::LightSwitchApplication.Months e)
                {
                    bool result = false;
                    e.TotalHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalHours_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalHours_Validate(r);
                }
                private static global::System.Nullable<int> _TotalHours_GetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalHours;
                }
                private static void _TotalHours_SetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.TotalHours = v;
                }
                private static void _TotalHours_OnValueChanged(global::LightSwitchApplication.Months e)
                {
                    e.TotalHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>.Entry
                    WorkingDays = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>.Entry(
                        "WorkingDays",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDays_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDays_ComputeIsReadOnly,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDays_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDays_GetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDays_SetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDays_OnValueChanged);
                private static void _WorkingDays_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._WorkingDays, sf);
                }
                private static bool _WorkingDays_ComputeIsReadOnly(global::LightSwitchApplication.Months e)
                {
                    bool result = false;
                    e.WorkingDays_IsReadOnly(ref result);
                    return result;
                }
                private static void _WorkingDays_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WorkingDays_Validate(r);
                }
                private static global::System.Nullable<int> _WorkingDays_GetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.WorkingDays;
                }
                private static void _WorkingDays_SetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.WorkingDays = v;
                }
                private static void _WorkingDays_OnValueChanged(global::LightSwitchApplication.Months e)
                {
                    e.WorkingDays_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry
                    Year = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry(
                        "Year",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Year_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Year_ComputeIsReadOnly,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Year_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Year_GetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Year_SetImplementationValue,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._Year_OnValueChanged);
                private static void _Year_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._Year, sf);
                }
                private static bool _Year_ComputeIsReadOnly(global::LightSwitchApplication.Months e)
                {
                    bool result = false;
                    e.Year_IsReadOnly(ref result);
                    return result;
                }
                private static void _Year_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Year_Validate(r);
                }
                private static int _Year_GetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.Year;
                }
                private static void _Year_SetImplementationValue(global::LightSwitchApplication.Months.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Year = v;
                }
                private static void _Year_OnValueChanged(global::LightSwitchApplication.Months e)
                {
                    e.Year_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry
                    WorkingDay = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry(
                        "WorkingDay",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDay_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDay_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._WorkingDay_ComputeValue);
                private static void _WorkingDay_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._WorkingDay, sf);
                }
                private static void _WorkingDay_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WorkingDay_Validate(r);
                }
                private static int _WorkingDay_ComputeValue(global::LightSwitchApplication.Months e)
                {
                    int value = default(int);
                    e.WorkingDay_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry
                    TotalHour = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Entry(
                        "TotalHour",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHour_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHour_Validate,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._TotalHour_ComputeValue);
                private static void _TotalHour_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalHour, sf);
                }
                private static void _TotalHour_Validate(global::LightSwitchApplication.Months e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalHour_Validate(r);
                }
                private static int _TotalHour_ComputeValue(global::LightSwitchApplication.Months e)
                {
                    int value = default(int);
                    e.TotalHour_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeMonth>.Entry
                    EmployeeMonths = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeMonth>.Entry(
                        "EmployeeMonths",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._EmployeeMonths_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._EmployeeMonths_GetReferencedEntities,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._EmployeeMonths_GetEntityCollection);
                private static void _EmployeeMonths_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeMonth>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeMonths, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeMonth> _EmployeeMonths_GetReferencedEntities(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.EmployeeMonths, ref d._EmployeeMonths);
                }
                private static global::System.Collections.IEnumerable _EmployeeMonths_GetEntityCollection(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeMonths;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeProject>.Entry
                    EmployeeProjects = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeProject>.Entry(
                        "EmployeeProjects",
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._EmployeeProjects_Stub,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._EmployeeProjects_GetReferencedEntities,
                        global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties._EmployeeProjects_GetEntityCollection);
                private static void _EmployeeProjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Months.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeProject>.Data> c, global::LightSwitchApplication.Months.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeProjects, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeProject> _EmployeeProjects_GetReferencedEntities(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.EmployeeProject, global::LightSwitchApplication.EmployeeProject.DetailsClass>(global::LightSwitchApplication.Months.DetailsClass.PropertySetProperties.EmployeeProjects, ref d._EmployeeProjects);
                }
                private static global::System.Collections.IEnumerable _EmployeeProjects_GetEntityCollection(global::LightSwitchApplication.Months.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeProjects;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data _MonthID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, string>.Data _MonthName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data _NoOfDays;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data _WeekDays;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data _Holidays;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>.Data _TotalHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::System.Nullable<int>>.Data _WorkingDays;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data _Year;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data _WorkingDay;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, int>.Data _TotalHour;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeMonth>.Data _EmployeeMonths;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass, global::LightSwitchApplication.EmployeeProject>.Data _EmployeeProjects;
            
        }
    
        #endregion
    }
    
    #endregion
}
