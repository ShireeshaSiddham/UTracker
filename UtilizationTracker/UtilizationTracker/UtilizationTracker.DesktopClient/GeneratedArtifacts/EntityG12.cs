

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class TeamProjectsList : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TeamProjectsList entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TeamProjectsList()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TeamProjectsList(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TeamProjectsList> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TeamProjectsList.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamProjectsList_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamProjectsList_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Expr1
        {
            get
            {
                return global::LightSwitchApplication.TeamProjectsList.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.Expr1);
            }
            set
            {
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.Expr1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Expr1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Expr1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Expr1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get
            {
                return global::LightSwitchApplication.TeamProjectsList.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ManagerName
        {
            get
            {
                return global::LightSwitchApplication.TeamProjectsList.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ManagerName);
            }
            set
            {
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ManagerName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmpName
        {
            get
            {
                return global::LightSwitchApplication.TeamProjectsList.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.EmpName);
            }
            set
            {
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.EmpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ManagerID
        {
            get
            {
                return global::LightSwitchApplication.TeamProjectsList.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ManagerID);
            }
            set
            {
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ManagerID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> EmpID
        {
            get
            {
                return global::LightSwitchApplication.TeamProjectsList.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ProjectID
        {
            get
            {
                return global::LightSwitchApplication.TeamProjectsList.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string KeyField
        {
            get
            {
                return global::LightSwitchApplication.TeamProjectsList.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.KeyField);
            }
            set
            {
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.KeyField, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyField_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyField_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyField_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TeamProjectsList,
                global::LightSwitchApplication.TeamProjectsList.DetailsClass,
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.IImplementation,
                global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.Expr1;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass>.Entry
                __TeamProjectsListEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass>.Entry(
                    global::LightSwitchApplication.TeamProjectsList.DetailsClass.__TeamProjectsList_CreateNew,
                    global::LightSwitchApplication.TeamProjectsList.DetailsClass.__TeamProjectsList_Created,
                    global::LightSwitchApplication.TeamProjectsList.DetailsClass.__TeamProjectsList_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TeamProjectsList __TeamProjectsList_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TeamProjectsList> es)
            {
                return new global::LightSwitchApplication.TeamProjectsList(es);
            }
            private static void __TeamProjectsList_Created(global::LightSwitchApplication.TeamProjectsList e)
            {
                e.TeamProjectsList_Created();
            }
            private static bool __TeamProjectsList_AllowSaveWithErrors(global::LightSwitchApplication.TeamProjectsList e)
            {
                bool result = false;
                e.TeamProjectsList_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>> Expr1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.Expr1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string> ManagerName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ManagerName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string> EmpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.EmpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>> ManagerID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ManagerID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>> ProjectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.ProjectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string> KeyField
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties.KeyField) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Nullable<int> Expr1 { get; set; }
                new string ProjectName { get; set; }
                new string ManagerName { get; set; }
                new string EmpName { get; set; }
                new global::System.Nullable<int> ManagerID { get; set; }
                new global::System.Nullable<int> EmpID { get; set; }
                new global::System.Nullable<int> ProjectID { get; set; }
                new string KeyField { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Entry
                    Expr1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Expr1",
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._Expr1_Stub,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._Expr1_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._Expr1_Validate,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._Expr1_GetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._Expr1_SetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._Expr1_OnValueChanged);
                private static void _Expr1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.TeamProjectsList.DetailsClass d, object sf)
                {
                    c(d, ref d._Expr1, sf);
                }
                private static bool _Expr1_ComputeIsReadOnly(global::LightSwitchApplication.TeamProjectsList e)
                {
                    bool result = false;
                    e.Expr1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Expr1_Validate(global::LightSwitchApplication.TeamProjectsList e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Expr1_Validate(r);
                }
                private static global::System.Nullable<int> _Expr1_GetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d)
                {
                    return d.ImplementationEntity.Expr1;
                }
                private static void _Expr1_SetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Expr1 = v;
                }
                private static void _Expr1_OnValueChanged(global::LightSwitchApplication.TeamProjectsList e)
                {
                    e.Expr1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Entry(
                        "ProjectName",
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectName_GetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectName_SetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Data> c, global::LightSwitchApplication.TeamProjectsList.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static bool _ProjectName_ComputeIsReadOnly(global::LightSwitchApplication.TeamProjectsList e)
                {
                    bool result = false;
                    e.ProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.TeamProjectsList e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectName_Validate(r);
                }
                private static string _ProjectName_GetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectName;
                }
                private static void _ProjectName_SetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectName = v;
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.TeamProjectsList e)
                {
                    e.ProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Entry
                    ManagerName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Entry(
                        "ManagerName",
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerName_Stub,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerName_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerName_Validate,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerName_GetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerName_SetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerName_OnValueChanged);
                private static void _ManagerName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Data> c, global::LightSwitchApplication.TeamProjectsList.DetailsClass d, object sf)
                {
                    c(d, ref d._ManagerName, sf);
                }
                private static bool _ManagerName_ComputeIsReadOnly(global::LightSwitchApplication.TeamProjectsList e)
                {
                    bool result = false;
                    e.ManagerName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ManagerName_Validate(global::LightSwitchApplication.TeamProjectsList e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ManagerName_Validate(r);
                }
                private static string _ManagerName_GetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d)
                {
                    return d.ImplementationEntity.ManagerName;
                }
                private static void _ManagerName_SetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ManagerName = v;
                }
                private static void _ManagerName_OnValueChanged(global::LightSwitchApplication.TeamProjectsList e)
                {
                    e.ManagerName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Entry
                    EmpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Entry(
                        "EmpName",
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpName_Stub,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpName_Validate,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpName_GetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpName_SetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpName_OnValueChanged);
                private static void _EmpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Data> c, global::LightSwitchApplication.TeamProjectsList.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpName, sf);
                }
                private static bool _EmpName_ComputeIsReadOnly(global::LightSwitchApplication.TeamProjectsList e)
                {
                    bool result = false;
                    e.EmpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpName_Validate(global::LightSwitchApplication.TeamProjectsList e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpName_Validate(r);
                }
                private static string _EmpName_GetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpName;
                }
                private static void _EmpName_SetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EmpName = v;
                }
                private static void _EmpName_OnValueChanged(global::LightSwitchApplication.TeamProjectsList e)
                {
                    e.EmpName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Entry
                    ManagerID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ManagerID",
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerID_Stub,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerID_Validate,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerID_GetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerID_SetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ManagerID_OnValueChanged);
                private static void _ManagerID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.TeamProjectsList.DetailsClass d, object sf)
                {
                    c(d, ref d._ManagerID, sf);
                }
                private static bool _ManagerID_ComputeIsReadOnly(global::LightSwitchApplication.TeamProjectsList e)
                {
                    bool result = false;
                    e.ManagerID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ManagerID_Validate(global::LightSwitchApplication.TeamProjectsList e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ManagerID_Validate(r);
                }
                private static global::System.Nullable<int> _ManagerID_GetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d)
                {
                    return d.ImplementationEntity.ManagerID;
                }
                private static void _ManagerID_SetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ManagerID = v;
                }
                private static void _ManagerID_OnValueChanged(global::LightSwitchApplication.TeamProjectsList e)
                {
                    e.ManagerID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.TeamProjectsList.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.TeamProjectsList e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.TeamProjectsList e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static global::System.Nullable<int> _EmpID_GetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.TeamProjectsList e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ProjectID",
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectID_GetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectID_SetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.TeamProjectsList.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static bool _ProjectID_ComputeIsReadOnly(global::LightSwitchApplication.TeamProjectsList e)
                {
                    bool result = false;
                    e.ProjectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.TeamProjectsList e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectID_Validate(r);
                }
                private static global::System.Nullable<int> _ProjectID_GetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectID;
                }
                private static void _ProjectID_SetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ProjectID = v;
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.TeamProjectsList e)
                {
                    e.ProjectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Entry
                    KeyField = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Entry(
                        "KeyField",
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._KeyField_Stub,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._KeyField_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._KeyField_Validate,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._KeyField_GetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._KeyField_SetImplementationValue,
                        global::LightSwitchApplication.TeamProjectsList.DetailsClass.PropertySetProperties._KeyField_OnValueChanged);
                private static void _KeyField_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Data> c, global::LightSwitchApplication.TeamProjectsList.DetailsClass d, object sf)
                {
                    c(d, ref d._KeyField, sf);
                }
                private static bool _KeyField_ComputeIsReadOnly(global::LightSwitchApplication.TeamProjectsList e)
                {
                    bool result = false;
                    e.KeyField_IsReadOnly(ref result);
                    return result;
                }
                private static void _KeyField_Validate(global::LightSwitchApplication.TeamProjectsList e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.KeyField_Validate(r);
                }
                private static string _KeyField_GetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d)
                {
                    return d.ImplementationEntity.KeyField;
                }
                private static void _KeyField_SetImplementationValue(global::LightSwitchApplication.TeamProjectsList.DetailsClass d, string v)
                {
                    d.ImplementationEntity.KeyField = v;
                }
                private static void _KeyField_OnValueChanged(global::LightSwitchApplication.TeamProjectsList e)
                {
                    e.KeyField_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Data _Expr1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Data _ProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Data _ManagerName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Data _EmpName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Data _ManagerID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, global::System.Nullable<int>>.Data _ProjectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamProjectsList, global::LightSwitchApplication.TeamProjectsList.DetailsClass, string>.Data _KeyField;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class TotalHour : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TotalHour entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TotalHour()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TotalHour(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TotalHour> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TotalHour.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHour_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHour_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> TotalHours
        {
            get
            {
                return global::LightSwitchApplication.TotalHour.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties.TotalHours);
            }
            set
            {
                global::LightSwitchApplication.TotalHour.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties.TotalHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmpID
        {
            get
            {
                return global::LightSwitchApplication.TotalHour.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.TotalHour.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TotalHour,
                global::LightSwitchApplication.TotalHour.DetailsClass,
                global::LightSwitchApplication.TotalHour.DetailsClass.IImplementation,
                global::LightSwitchApplication.TotalHour.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties.TotalHours;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass>.Entry
                __TotalHourEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass>.Entry(
                    global::LightSwitchApplication.TotalHour.DetailsClass.__TotalHour_CreateNew,
                    global::LightSwitchApplication.TotalHour.DetailsClass.__TotalHour_Created,
                    global::LightSwitchApplication.TotalHour.DetailsClass.__TotalHour_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TotalHour __TotalHour_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TotalHour> es)
            {
                return new global::LightSwitchApplication.TotalHour(es);
            }
            private static void __TotalHour_Created(global::LightSwitchApplication.TotalHour e)
            {
                e.TotalHour_Created();
            }
            private static bool __TotalHour_AllowSaveWithErrors(global::LightSwitchApplication.TotalHour e)
            {
                bool result = false;
                e.TotalHour_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TotalHour.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, global::System.Nullable<decimal>> TotalHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties.TotalHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, int> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, int>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Nullable<decimal> TotalHours { get; set; }
                new int EmpID { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, global::System.Nullable<decimal>>.Entry
                    TotalHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "TotalHours",
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._TotalHours_Stub,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._TotalHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._TotalHours_Validate,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._TotalHours_GetImplementationValue,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._TotalHours_SetImplementationValue,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._TotalHours_OnValueChanged);
                private static void _TotalHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.TotalHour.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalHours, sf);
                }
                private static bool _TotalHours_ComputeIsReadOnly(global::LightSwitchApplication.TotalHour e)
                {
                    bool result = false;
                    e.TotalHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalHours_Validate(global::LightSwitchApplication.TotalHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalHours_Validate(r);
                }
                private static global::System.Nullable<decimal> _TotalHours_GetImplementationValue(global::LightSwitchApplication.TotalHour.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalHours;
                }
                private static void _TotalHours_SetImplementationValue(global::LightSwitchApplication.TotalHour.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.TotalHours = v;
                }
                private static void _TotalHours_OnValueChanged(global::LightSwitchApplication.TotalHour e)
                {
                    e.TotalHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, int>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, int>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.TotalHour.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, int>.Data> c, global::LightSwitchApplication.TotalHour.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.TotalHour e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.TotalHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static int _EmpID_GetImplementationValue(global::LightSwitchApplication.TotalHour.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.TotalHour.DetailsClass d, int v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.TotalHour e)
                {
                    e.EmpID_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, global::System.Nullable<decimal>>.Data _TotalHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHour, global::LightSwitchApplication.TotalHour.DetailsClass, int>.Data _EmpID;
            
        }
    
        #endregion
    }
    
    #endregion
}
