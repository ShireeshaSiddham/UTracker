

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class TotalHoursandProjectShare : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TotalHoursandProjectShare entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TotalHoursandProjectShare()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TotalHoursandProjectShare(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TotalHoursandProjectShare> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHoursandProjectShare_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHoursandProjectShare_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ProjectShare
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ProjectShare);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ProjectShare, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectShare_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectShare_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectShare_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TotalHours
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.TotalHours);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.TotalHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> TotalofallProjects
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.TotalofallProjects);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.TotalofallProjects, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalofallProjects_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalofallProjects_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalofallProjects_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmpID
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ComplexityAvg
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityAvg);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityAvg, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityAvg_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityAvg_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityAvg_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> QualityAverage
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityAverage);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityAverage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityAverage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityAverage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityAverage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ComplexityDifficultyLevel
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityDifficultyLevel);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityDifficultyLevel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityDifficultyLevel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityDifficultyLevel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityDifficultyLevel_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ComplexityScope
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityScope);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityScope, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityScope_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityScope_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityScope_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> QualityPMRating
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityPMRating);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityPMRating, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPMRating_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPMRating_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPMRating_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> QualityPeerReview
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityPeerReview);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityPeerReview, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPeerReview_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPeerReview_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPeerReview_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string QualityProjectDuration
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityProjectDuration);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityProjectDuration, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityProjectDuration_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityProjectDuration_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityProjectDuration_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TotalHoursandProjectShare,
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass,
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.IImplementation,
                global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ProjectShare;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass>.Entry
                __TotalHoursandProjectShareEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass>.Entry(
                    global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.__TotalHoursandProjectShare_CreateNew,
                    global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.__TotalHoursandProjectShare_Created,
                    global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.__TotalHoursandProjectShare_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TotalHoursandProjectShare __TotalHoursandProjectShare_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TotalHoursandProjectShare> es)
            {
                return new global::LightSwitchApplication.TotalHoursandProjectShare(es);
            }
            private static void __TotalHoursandProjectShare_Created(global::LightSwitchApplication.TotalHoursandProjectShare e)
            {
                e.TotalHoursandProjectShare_Created();
            }
            private static bool __TotalHoursandProjectShare_AllowSaveWithErrors(global::LightSwitchApplication.TotalHoursandProjectShare e)
            {
                bool result = false;
                e.TotalHoursandProjectShare_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>> ProjectShare
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ProjectShare) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal> TotalHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.TotalHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>> TotalofallProjects
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.TotalofallProjects) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, int> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>> ComplexityAvg
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityAvg) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>> QualityAverage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityAverage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal> ComplexityDifficultyLevel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityDifficultyLevel) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal> ComplexityScope
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.ComplexityScope) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>> QualityPMRating
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityPMRating) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>> QualityPeerReview
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityPeerReview) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string> QualityProjectDuration
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties.QualityProjectDuration) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Nullable<decimal> ProjectShare { get; set; }
                new decimal TotalHours { get; set; }
                new string ProjectName { get; set; }
                new global::System.Nullable<decimal> TotalofallProjects { get; set; }
                new int EmpID { get; set; }
                new global::System.Nullable<decimal> ComplexityAvg { get; set; }
                new global::System.Nullable<decimal> QualityAverage { get; set; }
                new decimal ComplexityDifficultyLevel { get; set; }
                new decimal ComplexityScope { get; set; }
                new global::System.Nullable<decimal> QualityPMRating { get; set; }
                new global::System.Nullable<decimal> QualityPeerReview { get; set; }
                new string QualityProjectDuration { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ProjectShare = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ProjectShare",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectShare_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectShare_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectShare_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectShare_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectShare_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectShare_OnValueChanged);
                private static void _ProjectShare_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectShare, sf);
                }
                private static bool _ProjectShare_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.ProjectShare_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectShare_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectShare_Validate(r);
                }
                private static global::System.Nullable<decimal> _ProjectShare_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectShare;
                }
                private static void _ProjectShare_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ProjectShare = v;
                }
                private static void _ProjectShare_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.ProjectShare_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Entry
                    TotalHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Entry(
                        "TotalHours",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalHours_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalHours_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalHours_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalHours_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalHours_OnValueChanged);
                private static void _TotalHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalHours, sf);
                }
                private static bool _TotalHours_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.TotalHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalHours_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalHours_Validate(r);
                }
                private static decimal _TotalHours_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalHours;
                }
                private static void _TotalHours_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.TotalHours = v;
                }
                private static void _TotalHours_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.TotalHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>.Entry(
                        "ProjectName",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectName_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectName_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static bool _ProjectName_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.ProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectName_Validate(r);
                }
                private static string _ProjectName_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectName;
                }
                private static void _ProjectName_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectName = v;
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.ProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry
                    TotalofallProjects = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "TotalofallProjects",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalofallProjects_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalofallProjects_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalofallProjects_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalofallProjects_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalofallProjects_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._TotalofallProjects_OnValueChanged);
                private static void _TotalofallProjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalofallProjects, sf);
                }
                private static bool _TotalofallProjects_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.TotalofallProjects_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalofallProjects_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalofallProjects_Validate(r);
                }
                private static global::System.Nullable<decimal> _TotalofallProjects_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalofallProjects;
                }
                private static void _TotalofallProjects_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.TotalofallProjects = v;
                }
                private static void _TotalofallProjects_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.TotalofallProjects_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, int>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, int>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, int>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static int _EmpID_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, int v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ComplexityAvg = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ComplexityAvg",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityAvg_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityAvg_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityAvg_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityAvg_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityAvg_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityAvg_OnValueChanged);
                private static void _ComplexityAvg_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._ComplexityAvg, sf);
                }
                private static bool _ComplexityAvg_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.ComplexityAvg_IsReadOnly(ref result);
                    return result;
                }
                private static void _ComplexityAvg_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ComplexityAvg_Validate(r);
                }
                private static global::System.Nullable<decimal> _ComplexityAvg_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.ComplexityAvg;
                }
                private static void _ComplexityAvg_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ComplexityAvg = v;
                }
                private static void _ComplexityAvg_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.ComplexityAvg_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry
                    QualityAverage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "QualityAverage",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityAverage_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityAverage_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityAverage_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityAverage_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityAverage_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityAverage_OnValueChanged);
                private static void _QualityAverage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._QualityAverage, sf);
                }
                private static bool _QualityAverage_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.QualityAverage_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualityAverage_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualityAverage_Validate(r);
                }
                private static global::System.Nullable<decimal> _QualityAverage_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.QualityAverage;
                }
                private static void _QualityAverage_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.QualityAverage = v;
                }
                private static void _QualityAverage_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.QualityAverage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Entry
                    ComplexityDifficultyLevel = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Entry(
                        "ComplexityDifficultyLevel",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_OnValueChanged);
                private static void _ComplexityDifficultyLevel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._ComplexityDifficultyLevel, sf);
                }
                private static bool _ComplexityDifficultyLevel_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.ComplexityDifficultyLevel_IsReadOnly(ref result);
                    return result;
                }
                private static void _ComplexityDifficultyLevel_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ComplexityDifficultyLevel_Validate(r);
                }
                private static decimal _ComplexityDifficultyLevel_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.ComplexityDifficultyLevel;
                }
                private static void _ComplexityDifficultyLevel_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.ComplexityDifficultyLevel = v;
                }
                private static void _ComplexityDifficultyLevel_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.ComplexityDifficultyLevel_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Entry
                    ComplexityScope = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Entry(
                        "ComplexityScope",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityScope_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityScope_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityScope_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityScope_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityScope_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._ComplexityScope_OnValueChanged);
                private static void _ComplexityScope_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._ComplexityScope, sf);
                }
                private static bool _ComplexityScope_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.ComplexityScope_IsReadOnly(ref result);
                    return result;
                }
                private static void _ComplexityScope_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ComplexityScope_Validate(r);
                }
                private static decimal _ComplexityScope_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.ComplexityScope;
                }
                private static void _ComplexityScope_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.ComplexityScope = v;
                }
                private static void _ComplexityScope_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.ComplexityScope_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry
                    QualityPMRating = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "QualityPMRating",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPMRating_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPMRating_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPMRating_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPMRating_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPMRating_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPMRating_OnValueChanged);
                private static void _QualityPMRating_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._QualityPMRating, sf);
                }
                private static bool _QualityPMRating_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.QualityPMRating_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualityPMRating_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualityPMRating_Validate(r);
                }
                private static global::System.Nullable<decimal> _QualityPMRating_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.QualityPMRating;
                }
                private static void _QualityPMRating_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.QualityPMRating = v;
                }
                private static void _QualityPMRating_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.QualityPMRating_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry
                    QualityPeerReview = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "QualityPeerReview",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPeerReview_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPeerReview_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPeerReview_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPeerReview_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPeerReview_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityPeerReview_OnValueChanged);
                private static void _QualityPeerReview_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._QualityPeerReview, sf);
                }
                private static bool _QualityPeerReview_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.QualityPeerReview_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualityPeerReview_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualityPeerReview_Validate(r);
                }
                private static global::System.Nullable<decimal> _QualityPeerReview_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.QualityPeerReview;
                }
                private static void _QualityPeerReview_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.QualityPeerReview = v;
                }
                private static void _QualityPeerReview_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.QualityPeerReview_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>.Entry
                    QualityProjectDuration = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>.Entry(
                        "QualityProjectDuration",
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityProjectDuration_Stub,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityProjectDuration_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityProjectDuration_Validate,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityProjectDuration_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityProjectDuration_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass.PropertySetProperties._QualityProjectDuration_OnValueChanged);
                private static void _QualityProjectDuration_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>.Data> c, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, object sf)
                {
                    c(d, ref d._QualityProjectDuration, sf);
                }
                private static bool _QualityProjectDuration_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    bool result = false;
                    e.QualityProjectDuration_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualityProjectDuration_Validate(global::LightSwitchApplication.TotalHoursandProjectShare e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualityProjectDuration_Validate(r);
                }
                private static string _QualityProjectDuration_GetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d)
                {
                    return d.ImplementationEntity.QualityProjectDuration;
                }
                private static void _QualityProjectDuration_SetImplementationValue(global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass d, string v)
                {
                    d.ImplementationEntity.QualityProjectDuration = v;
                }
                private static void _QualityProjectDuration_OnValueChanged(global::LightSwitchApplication.TotalHoursandProjectShare e)
                {
                    e.QualityProjectDuration_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data _ProjectShare;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Data _TotalHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>.Data _ProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data _TotalofallProjects;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, int>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data _ComplexityAvg;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data _QualityAverage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Data _ComplexityDifficultyLevel;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, decimal>.Data _ComplexityScope;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data _QualityPMRating;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, global::System.Nullable<decimal>>.Data _QualityPeerReview;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursandProjectShare, global::LightSwitchApplication.TotalHoursandProjectShare.DetailsClass, string>.Data _QualityProjectDuration;
            
        }
    
        #endregion
    }
    
    #endregion
}
