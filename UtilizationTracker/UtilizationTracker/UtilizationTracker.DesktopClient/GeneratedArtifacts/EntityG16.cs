

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class TotalHoursProjectwiseforMonth : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TotalHoursProjectwiseforMonth entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TotalHoursProjectwiseforMonth()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TotalHoursProjectwiseforMonth(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TotalHoursProjectwiseforMonth> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHoursProjectwiseforMonth_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHoursProjectwiseforMonth_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Total_Hours
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.Total_Hours);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.Total_Hours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_Hours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_Hours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_Hours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MonthName
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.MonthName);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.MonthName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmpID
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProjectID
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MonthID
        {
            get
            {
                return global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.MonthID);
            }
            set
            {
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.MonthID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth,
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass,
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.IImplementation,
                global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.Total_Hours;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass>.Entry
                __TotalHoursProjectwiseforMonthEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass>.Entry(
                    global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.__TotalHoursProjectwiseforMonth_CreateNew,
                    global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.__TotalHoursProjectwiseforMonth_Created,
                    global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.__TotalHoursProjectwiseforMonth_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TotalHoursProjectwiseforMonth __TotalHoursProjectwiseforMonth_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TotalHoursProjectwiseforMonth> es)
            {
                return new global::LightSwitchApplication.TotalHoursProjectwiseforMonth(es);
            }
            private static void __TotalHoursProjectwiseforMonth_Created(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
            {
                e.TotalHoursProjectwiseforMonth_Created();
            }
            private static bool __TotalHoursProjectwiseforMonth_AllowSaveWithErrors(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
            {
                bool result = false;
                e.TotalHoursProjectwiseforMonth_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::System.Nullable<decimal>> Total_Hours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.Total_Hours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string> MonthName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.MonthName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.ProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int> ProjectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.ProjectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int> MonthID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties.MonthID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Nullable<decimal> Total_Hours { get; set; }
                new string MonthName { get; set; }
                new string ProjectName { get; set; }
                new int EmpID { get; set; }
                new int ProjectID { get; set; }
                new int MonthID { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Total_Hours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Total_Hours",
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._Total_Hours_Stub,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._Total_Hours_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._Total_Hours_Validate,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._Total_Hours_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._Total_Hours_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._Total_Hours_OnValueChanged);
                private static void _Total_Hours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._Total_Hours, sf);
                }
                private static bool _Total_Hours_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    bool result = false;
                    e.Total_Hours_IsReadOnly(ref result);
                    return result;
                }
                private static void _Total_Hours_Validate(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Total_Hours_Validate(r);
                }
                private static global::System.Nullable<decimal> _Total_Hours_GetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.Total_Hours;
                }
                private static void _Total_Hours_SetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Total_Hours = v;
                }
                private static void _Total_Hours_OnValueChanged(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    e.Total_Hours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>.Entry
                    MonthName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>.Entry(
                        "MonthName",
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthName_Stub,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthName_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthName_Validate,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthName_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthName_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthName_OnValueChanged);
                private static void _MonthName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>.Data> c, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthName, sf);
                }
                private static bool _MonthName_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    bool result = false;
                    e.MonthName_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthName_Validate(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthName_Validate(r);
                }
                private static string _MonthName_GetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthName;
                }
                private static void _MonthName_SetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MonthName = v;
                }
                private static void _MonthName_OnValueChanged(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    e.MonthName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>.Entry(
                        "ProjectName",
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectName_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectName_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>.Data> c, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static bool _ProjectName_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    bool result = false;
                    e.ProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectName_Validate(r);
                }
                private static string _ProjectName_GetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectName;
                }
                private static void _ProjectName_SetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectName = v;
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    e.ProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Data> c, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static int _EmpID_GetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, int v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Entry(
                        "ProjectID",
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectID_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectID_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Data> c, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static bool _ProjectID_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    bool result = false;
                    e.ProjectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectID_Validate(r);
                }
                private static int _ProjectID_GetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectID;
                }
                private static void _ProjectID_SetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ProjectID = v;
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    e.ProjectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Entry
                    MonthID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Entry(
                        "MonthID",
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthID_Stub,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthID_ComputeIsReadOnly,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthID_Validate,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthID_GetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthID_SetImplementationValue,
                        global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass.PropertySetProperties._MonthID_OnValueChanged);
                private static void _MonthID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Data> c, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthID, sf);
                }
                private static bool _MonthID_ComputeIsReadOnly(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    bool result = false;
                    e.MonthID_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthID_Validate(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthID_Validate(r);
                }
                private static int _MonthID_GetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthID;
                }
                private static void _MonthID_SetImplementationValue(global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MonthID = v;
                }
                private static void _MonthID_OnValueChanged(global::LightSwitchApplication.TotalHoursProjectwiseforMonth e)
                {
                    e.MonthID_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, global::System.Nullable<decimal>>.Data _Total_Hours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>.Data _MonthName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, string>.Data _ProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Data _ProjectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TotalHoursProjectwiseforMonth, global::LightSwitchApplication.TotalHoursProjectwiseforMonth.DetailsClass, int>.Data _MonthID;
            
        }
    
        #endregion
    }
    
    #endregion
}
