

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EmployeeMonth : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the EmployeeMonth entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeMonth()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeMonth(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EmployeeMonth> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.EmployeeMonth.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeMonth_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeMonth_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmpID
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MonthID
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthID);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NoOfLeaves
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfLeaves);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfLeaves, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfLeaves_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfLeaves_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfLeaves_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.EmployeeDetail EmployeeDetail
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeDetail);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeDetail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeDetail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeDetail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeDetail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Months Months
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.Months);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.Months, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Months_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Months_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Months_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.EmployeeMonth,
                global::LightSwitchApplication.EmployeeMonth.DetailsClass,
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.IImplementation,
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmpID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>.Entry
                __EmployeeMonthEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>.Entry(
                    global::LightSwitchApplication.EmployeeMonth.DetailsClass.__EmployeeMonth_CreateNew,
                    global::LightSwitchApplication.EmployeeMonth.DetailsClass.__EmployeeMonth_Created,
                    global::LightSwitchApplication.EmployeeMonth.DetailsClass.__EmployeeMonth_AllowSaveWithErrors);
            private static global::LightSwitchApplication.EmployeeMonth __EmployeeMonth_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EmployeeMonth> es)
            {
                return new global::LightSwitchApplication.EmployeeMonth(es);
            }
            private static void __EmployeeMonth_Created(global::LightSwitchApplication.EmployeeMonth e)
            {
                e.EmployeeMonth_Created();
            }
            private static bool __EmployeeMonth_AllowSaveWithErrors(global::LightSwitchApplication.EmployeeMonth e)
            {
                bool result = false;
                e.EmployeeMonth_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int> MonthID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int> NoOfLeaves
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfLeaves) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeDetail> EmployeeDetail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeDetail) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeDetail>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.Months> Months
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.Months) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.Months>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int EmpID { get; set; }
                new int MonthID { get; set; }
                new int NoOfLeaves { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation EmployeeDetail { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Months { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static int _EmpID_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, int v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry
                    MonthID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry(
                        "MonthID",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_OnValueChanged);
                private static void _MonthID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthID, sf);
                }
                private static bool _MonthID_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.MonthID_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthID_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthID_Validate(r);
                }
                private static int _MonthID_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthID;
                }
                private static void _MonthID_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MonthID = v;
                }
                private static void _MonthID_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.MonthID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry
                    NoOfLeaves = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry(
                        "NoOfLeaves",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_OnValueChanged);
                private static void _NoOfLeaves_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._NoOfLeaves, sf);
                }
                private static bool _NoOfLeaves_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.NoOfLeaves_IsReadOnly(ref result);
                    return result;
                }
                private static void _NoOfLeaves_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NoOfLeaves_Validate(r);
                }
                private static int _NoOfLeaves_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.NoOfLeaves;
                }
                private static void _NoOfLeaves_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NoOfLeaves = v;
                }
                private static void _NoOfLeaves_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.NoOfLeaves_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeDetail>.Entry
                    EmployeeDetail = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeDetail>.Entry(
                        "EmployeeDetail",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeDetail_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeDetail_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeDetail_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeDetail_GetCoreImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeDetail_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeDetail_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeDetail_Refresh,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeDetail_OnValueChanged);
                private static void _EmployeeDetail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeDetail>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeDetail, sf);
                }
                private static bool _EmployeeDetail_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.EmployeeDetail_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmployeeDetail_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmployeeDetail_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _EmployeeDetail_GetCoreImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeDetail;
                }
                private static global::LightSwitchApplication.EmployeeDetail _EmployeeDetail_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.EmployeeDetail, global::LightSwitchApplication.EmployeeDetail.DetailsClass>(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeDetail, ref d._EmployeeDetail);
                }
                private static void _EmployeeDetail_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, global::LightSwitchApplication.EmployeeDetail v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeDetail, ref d._EmployeeDetail, (i, ev) => i.EmployeeDetail = ev, v);
                }
                private static void _EmployeeDetail_Refresh(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeDetail, ref d._EmployeeDetail);
                }
                private static void _EmployeeDetail_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.EmployeeDetail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.Months>.Entry
                    Months = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.Months>.Entry(
                        "Months",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._Months_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._Months_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._Months_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._Months_GetCoreImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._Months_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._Months_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._Months_Refresh,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._Months_OnValueChanged);
                private static void _Months_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.Months>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._Months, sf);
                }
                private static bool _Months_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.Months_IsReadOnly(ref result);
                    return result;
                }
                private static void _Months_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Months_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Months_GetCoreImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.Months;
                }
                private static global::LightSwitchApplication.Months _Months_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Months, global::LightSwitchApplication.Months.DetailsClass>(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.Months, ref d._Months);
                }
                private static void _Months_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, global::LightSwitchApplication.Months v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.Months, ref d._Months, (i, ev) => i.Months = ev, v);
                }
                private static void _Months_Refresh(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.Months, ref d._Months);
                }
                private static void _Months_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.Months_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data _MonthID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data _NoOfLeaves;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeDetail>.Data _EmployeeDetail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.Months>.Data _Months;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EmployeeProjectHour : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the EmployeeProjectHour entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeProjectHour()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeProjectHour(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EmployeeProjectHour> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeProjectHour_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeProjectHour_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SubProject
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.SubProject);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.SubProject, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubProject_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubProject_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubProject_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProjectID
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmpID
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TaskID
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.TaskID);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.TaskID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.c_Date);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.c_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Hours
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.Hours);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.Hours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MonthName
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.MonthName);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.MonthName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmpName
        {
            get
            {
                return global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.EmpName);
            }
            set
            {
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.EmpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.EmployeeProjectHour,
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass,
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.IImplementation,
                global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.ProjectName;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass>.Entry
                __EmployeeProjectHourEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass>.Entry(
                    global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.__EmployeeProjectHour_CreateNew,
                    global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.__EmployeeProjectHour_Created,
                    global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.__EmployeeProjectHour_AllowSaveWithErrors);
            private static global::LightSwitchApplication.EmployeeProjectHour __EmployeeProjectHour_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EmployeeProjectHour> es)
            {
                return new global::LightSwitchApplication.EmployeeProjectHour(es);
            }
            private static void __EmployeeProjectHour_Created(global::LightSwitchApplication.EmployeeProjectHour e)
            {
                e.EmployeeProjectHour_Created();
            }
            private static bool __EmployeeProjectHour_AllowSaveWithErrors(global::LightSwitchApplication.EmployeeProjectHour e)
            {
                bool result = false;
                e.EmployeeProjectHour_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.ProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string> SubProject
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.SubProject) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int> ProjectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.ProjectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int> TaskID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.TaskID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::System.DateTime> c_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.c_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, decimal> Hours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.Hours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string> MonthName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.MonthName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string> EmpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties.EmpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string ProjectName { get; set; }
                new string SubProject { get; set; }
                new int ProjectID { get; set; }
                new int EmpID { get; set; }
                new int TaskID { get; set; }
                new global::System.DateTime c_Date { get; set; }
                new decimal Hours { get; set; }
                new string MonthName { get; set; }
                new string EmpName { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Entry(
                        "ProjectName",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectName_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectName_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static bool _ProjectName_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.ProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectName_Validate(r);
                }
                private static string _ProjectName_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectName;
                }
                private static void _ProjectName_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectName = v;
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.ProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Entry
                    SubProject = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Entry(
                        "SubProject",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._SubProject_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._SubProject_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._SubProject_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._SubProject_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._SubProject_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._SubProject_OnValueChanged);
                private static void _SubProject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._SubProject, sf);
                }
                private static bool _SubProject_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.SubProject_IsReadOnly(ref result);
                    return result;
                }
                private static void _SubProject_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SubProject_Validate(r);
                }
                private static string _SubProject_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.SubProject;
                }
                private static void _SubProject_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SubProject = v;
                }
                private static void _SubProject_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.SubProject_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Entry(
                        "ProjectID",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectID_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectID_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static bool _ProjectID_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.ProjectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectID_Validate(r);
                }
                private static int _ProjectID_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectID;
                }
                private static void _ProjectID_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ProjectID = v;
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.ProjectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static int _EmpID_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, int v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Entry
                    TaskID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Entry(
                        "TaskID",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._TaskID_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._TaskID_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._TaskID_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._TaskID_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._TaskID_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._TaskID_OnValueChanged);
                private static void _TaskID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskID, sf);
                }
                private static bool _TaskID_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.TaskID_IsReadOnly(ref result);
                    return result;
                }
                private static void _TaskID_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TaskID_Validate(r);
                }
                private static int _TaskID_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.TaskID;
                }
                private static void _TaskID_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, int v)
                {
                    d.ImplementationEntity.TaskID = v;
                }
                private static void _TaskID_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.TaskID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::System.DateTime>.Entry
                    c_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::System.DateTime>.Entry(
                        "c_Date",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._c_Date_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._c_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._c_Date_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._c_Date_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._c_Date_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._c_Date_OnValueChanged);
                private static void _c_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._c_Date, sf);
                }
                private static bool _c_Date_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.c_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _c_Date_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.c_Date_Validate(r);
                }
                private static global::System.DateTime _c_Date_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.c_Date;
                }
                private static void _c_Date_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.c_Date = global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.TruncateDate(v);
                }
                private static void _c_Date_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.c_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, decimal>.Entry
                    Hours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, decimal>.Entry(
                        "Hours",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._Hours_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._Hours_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._Hours_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._Hours_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._Hours_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._Hours_OnValueChanged);
                private static void _Hours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._Hours, sf);
                }
                private static bool _Hours_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.Hours_IsReadOnly(ref result);
                    return result;
                }
                private static void _Hours_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Hours_Validate(r);
                }
                private static decimal _Hours_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.Hours;
                }
                private static void _Hours_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.Hours = v;
                }
                private static void _Hours_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.Hours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Entry
                    MonthName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Entry(
                        "MonthName",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._MonthName_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._MonthName_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._MonthName_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._MonthName_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._MonthName_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._MonthName_OnValueChanged);
                private static void _MonthName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthName, sf);
                }
                private static bool _MonthName_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.MonthName_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthName_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthName_Validate(r);
                }
                private static string _MonthName_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthName;
                }
                private static void _MonthName_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MonthName = v;
                }
                private static void _MonthName_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.MonthName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Entry
                    EmpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Entry(
                        "EmpName",
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpName_Stub,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpName_Validate,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpName_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpName_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeProjectHour.DetailsClass.PropertySetProperties._EmpName_OnValueChanged);
                private static void _EmpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Data> c, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpName, sf);
                }
                private static bool _EmpName_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    bool result = false;
                    e.EmpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpName_Validate(global::LightSwitchApplication.EmployeeProjectHour e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpName_Validate(r);
                }
                private static string _EmpName_GetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpName;
                }
                private static void _EmpName_SetImplementationValue(global::LightSwitchApplication.EmployeeProjectHour.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EmpName = v;
                }
                private static void _EmpName_OnValueChanged(global::LightSwitchApplication.EmployeeProjectHour e)
                {
                    e.EmpName_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Data _ProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Data _SubProject;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Data _ProjectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, int>.Data _TaskID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, global::System.DateTime>.Data _c_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, decimal>.Data _Hours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Data _MonthName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeProjectHour, global::LightSwitchApplication.EmployeeProjectHour.DetailsClass, string>.Data _EmpName;
            
        }
    
        #endregion
    }
    
    #endregion
}
