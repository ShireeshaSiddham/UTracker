

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class PMTeamProject : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the PMTeamProject entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PMTeamProject()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PMTeamProject(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.PMTeamProject> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.PMTeamProject.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMTeamProject_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PMTeamProject_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ManagerName
        {
            get
            {
                return global::LightSwitchApplication.PMTeamProject.DetailsClass.GetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ManagerName);
            }
            set
            {
                global::LightSwitchApplication.PMTeamProject.DetailsClass.SetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ManagerName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get
            {
                return global::LightSwitchApplication.PMTeamProject.DetailsClass.GetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.PMTeamProject.DetailsClass.SetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmpName
        {
            get
            {
                return global::LightSwitchApplication.PMTeamProject.DetailsClass.GetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.EmpName);
            }
            set
            {
                global::LightSwitchApplication.PMTeamProject.DetailsClass.SetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.EmpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> EmpID
        {
            get
            {
                return global::LightSwitchApplication.PMTeamProject.DetailsClass.GetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.PMTeamProject.DetailsClass.SetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ManagerID
        {
            get
            {
                return global::LightSwitchApplication.PMTeamProject.DetailsClass.GetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ManagerID);
            }
            set
            {
                global::LightSwitchApplication.PMTeamProject.DetailsClass.SetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ManagerID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManagerID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ProjectID
        {
            get
            {
                return global::LightSwitchApplication.PMTeamProject.DetailsClass.GetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.PMTeamProject.DetailsClass.SetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string KeyField
        {
            get
            {
                return global::LightSwitchApplication.PMTeamProject.DetailsClass.GetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.KeyField);
            }
            set
            {
                global::LightSwitchApplication.PMTeamProject.DetailsClass.SetValue(this, global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.KeyField, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyField_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyField_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyField_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.PMTeamProject,
                global::LightSwitchApplication.PMTeamProject.DetailsClass,
                global::LightSwitchApplication.PMTeamProject.DetailsClass.IImplementation,
                global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ManagerName;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass>.Entry
                __PMTeamProjectEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass>.Entry(
                    global::LightSwitchApplication.PMTeamProject.DetailsClass.__PMTeamProject_CreateNew,
                    global::LightSwitchApplication.PMTeamProject.DetailsClass.__PMTeamProject_Created,
                    global::LightSwitchApplication.PMTeamProject.DetailsClass.__PMTeamProject_AllowSaveWithErrors);
            private static global::LightSwitchApplication.PMTeamProject __PMTeamProject_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.PMTeamProject> es)
            {
                return new global::LightSwitchApplication.PMTeamProject(es);
            }
            private static void __PMTeamProject_Created(global::LightSwitchApplication.PMTeamProject e)
            {
                e.PMTeamProject_Created();
            }
            private static bool __PMTeamProject_AllowSaveWithErrors(global::LightSwitchApplication.PMTeamProject e)
            {
                bool result = false;
                e.PMTeamProject_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string> ManagerName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ManagerName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string> EmpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.EmpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>> ManagerID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ManagerID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>> ProjectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.ProjectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string> KeyField
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties.KeyField) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string ManagerName { get; set; }
                new string ProjectName { get; set; }
                new string EmpName { get; set; }
                new global::System.Nullable<int> EmpID { get; set; }
                new global::System.Nullable<int> ManagerID { get; set; }
                new global::System.Nullable<int> ProjectID { get; set; }
                new string KeyField { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Entry
                    ManagerName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Entry(
                        "ManagerName",
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerName_Stub,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerName_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerName_Validate,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerName_GetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerName_SetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerName_OnValueChanged);
                private static void _ManagerName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMTeamProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMTeamProject.DetailsClass d, object sf)
                {
                    c(d, ref d._ManagerName, sf);
                }
                private static bool _ManagerName_ComputeIsReadOnly(global::LightSwitchApplication.PMTeamProject e)
                {
                    bool result = false;
                    e.ManagerName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ManagerName_Validate(global::LightSwitchApplication.PMTeamProject e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ManagerName_Validate(r);
                }
                private static string _ManagerName_GetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d)
                {
                    return d.ImplementationEntity.ManagerName;
                }
                private static void _ManagerName_SetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ManagerName = v;
                }
                private static void _ManagerName_OnValueChanged(global::LightSwitchApplication.PMTeamProject e)
                {
                    e.ManagerName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Entry(
                        "ProjectName",
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectName_GetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectName_SetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMTeamProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMTeamProject.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static bool _ProjectName_ComputeIsReadOnly(global::LightSwitchApplication.PMTeamProject e)
                {
                    bool result = false;
                    e.ProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.PMTeamProject e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectName_Validate(r);
                }
                private static string _ProjectName_GetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectName;
                }
                private static void _ProjectName_SetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectName = v;
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.PMTeamProject e)
                {
                    e.ProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Entry
                    EmpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Entry(
                        "EmpName",
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpName_Stub,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpName_Validate,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpName_GetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpName_SetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpName_OnValueChanged);
                private static void _EmpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMTeamProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMTeamProject.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpName, sf);
                }
                private static bool _EmpName_ComputeIsReadOnly(global::LightSwitchApplication.PMTeamProject e)
                {
                    bool result = false;
                    e.EmpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpName_Validate(global::LightSwitchApplication.PMTeamProject e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpName_Validate(r);
                }
                private static string _EmpName_GetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpName;
                }
                private static void _EmpName_SetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EmpName = v;
                }
                private static void _EmpName_OnValueChanged(global::LightSwitchApplication.PMTeamProject e)
                {
                    e.EmpName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMTeamProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.PMTeamProject.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.PMTeamProject e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.PMTeamProject e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static global::System.Nullable<int> _EmpID_GetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.PMTeamProject e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Entry
                    ManagerID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ManagerID",
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerID_Stub,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerID_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerID_Validate,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerID_GetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerID_SetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ManagerID_OnValueChanged);
                private static void _ManagerID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMTeamProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.PMTeamProject.DetailsClass d, object sf)
                {
                    c(d, ref d._ManagerID, sf);
                }
                private static bool _ManagerID_ComputeIsReadOnly(global::LightSwitchApplication.PMTeamProject e)
                {
                    bool result = false;
                    e.ManagerID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ManagerID_Validate(global::LightSwitchApplication.PMTeamProject e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ManagerID_Validate(r);
                }
                private static global::System.Nullable<int> _ManagerID_GetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d)
                {
                    return d.ImplementationEntity.ManagerID;
                }
                private static void _ManagerID_SetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ManagerID = v;
                }
                private static void _ManagerID_OnValueChanged(global::LightSwitchApplication.PMTeamProject e)
                {
                    e.ManagerID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ProjectID",
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectID_GetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectID_SetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMTeamProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.PMTeamProject.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static bool _ProjectID_ComputeIsReadOnly(global::LightSwitchApplication.PMTeamProject e)
                {
                    bool result = false;
                    e.ProjectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.PMTeamProject e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectID_Validate(r);
                }
                private static global::System.Nullable<int> _ProjectID_GetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectID;
                }
                private static void _ProjectID_SetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ProjectID = v;
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.PMTeamProject e)
                {
                    e.ProjectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Entry
                    KeyField = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Entry(
                        "KeyField",
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._KeyField_Stub,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._KeyField_ComputeIsReadOnly,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._KeyField_Validate,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._KeyField_GetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._KeyField_SetImplementationValue,
                        global::LightSwitchApplication.PMTeamProject.DetailsClass.PropertySetProperties._KeyField_OnValueChanged);
                private static void _KeyField_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PMTeamProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Data> c, global::LightSwitchApplication.PMTeamProject.DetailsClass d, object sf)
                {
                    c(d, ref d._KeyField, sf);
                }
                private static bool _KeyField_ComputeIsReadOnly(global::LightSwitchApplication.PMTeamProject e)
                {
                    bool result = false;
                    e.KeyField_IsReadOnly(ref result);
                    return result;
                }
                private static void _KeyField_Validate(global::LightSwitchApplication.PMTeamProject e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.KeyField_Validate(r);
                }
                private static string _KeyField_GetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d)
                {
                    return d.ImplementationEntity.KeyField;
                }
                private static void _KeyField_SetImplementationValue(global::LightSwitchApplication.PMTeamProject.DetailsClass d, string v)
                {
                    d.ImplementationEntity.KeyField = v;
                }
                private static void _KeyField_OnValueChanged(global::LightSwitchApplication.PMTeamProject e)
                {
                    e.KeyField_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Data _ManagerName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Data _ProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Data _EmpName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Data _ManagerID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, global::System.Nullable<int>>.Data _ProjectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.PMTeamProject, global::LightSwitchApplication.PMTeamProject.DetailsClass, string>.Data _KeyField;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class ProjectDetail : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ProjectDetail entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectDetail()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectDetail(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectDetail> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ProjectDetail.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetail_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmpID
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProjectID
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectType
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectType);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectStatus
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectStatus);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.StartDate);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.StartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EndDate);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ComplexityDifficultyLevel
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityDifficultyLevel);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityDifficultyLevel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityDifficultyLevel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityDifficultyLevel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityDifficultyLevel_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ComplexityScope
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityScope);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityScope, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityScope_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityScope_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityScope_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ComplexityAvg
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityAvg);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityAvg, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityAvg_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityAvg_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComplexityAvg_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> QualityPMRating
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityPMRating);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityPMRating, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPMRating_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPMRating_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPMRating_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> QualityPeerReview
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityPeerReview);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityPeerReview, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPeerReview_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPeerReview_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityPeerReview_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string QualityProjectDuration
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityProjectDuration);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityProjectDuration, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityProjectDuration_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityProjectDuration_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityProjectDuration_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> QualityAverage
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityAverage);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityAverage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityAverage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityAverage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualityAverage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.EmployeeProject> EmployeeProjects
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EmployeeProjects);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeProject> EmployeeProjectsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EmployeeProjects);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectsInCompany ProjectsInCompany
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectsInCompany);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectsInCompany, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsInCompany_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsInCompany_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsInCompany_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ProjectDetail,
                global::LightSwitchApplication.ProjectDetail.DetailsClass,
                global::LightSwitchApplication.ProjectDetail.DetailsClass.IImplementation,
                global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EmpID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass>.Entry
                __ProjectDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectDetail.DetailsClass.__ProjectDetail_CreateNew,
                    global::LightSwitchApplication.ProjectDetail.DetailsClass.__ProjectDetail_Created,
                    global::LightSwitchApplication.ProjectDetail.DetailsClass.__ProjectDetail_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ProjectDetail __ProjectDetail_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectDetail> es)
            {
                return new global::LightSwitchApplication.ProjectDetail(es);
            }
            private static void __ProjectDetail_Created(global::LightSwitchApplication.ProjectDetail e)
            {
                e.ProjectDetail_Created();
            }
            private static bool __ProjectDetail_AllowSaveWithErrors(global::LightSwitchApplication.ProjectDetail e)
            {
                bool result = false;
                e.ProjectDetail_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int> ProjectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string> ProjectType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string> ProjectStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.DateTime> StartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.StartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<global::System.DateTime>> EndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal> ComplexityDifficultyLevel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityDifficultyLevel) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal> ComplexityScope
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityScope) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>> ComplexityAvg
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ComplexityAvg) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>> QualityPMRating
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityPMRating) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>> QualityPeerReview
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityPeerReview) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string> QualityProjectDuration
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityProjectDuration) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>> QualityAverage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.QualityAverage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.EmployeeProject> EmployeeProjects
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EmployeeProjects) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.EmployeeProject>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.ProjectsInCompany> ProjectsInCompany
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectsInCompany) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.ProjectsInCompany>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int EmpID { get; set; }
                new int ProjectID { get; set; }
                new string ProjectName { get; set; }
                new string ProjectType { get; set; }
                new string ProjectStatus { get; set; }
                new global::System.DateTime StartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> EndDate { get; set; }
                new decimal ComplexityDifficultyLevel { get; set; }
                new decimal ComplexityScope { get; set; }
                new global::System.Nullable<decimal> ComplexityAvg { get; set; }
                new global::System.Nullable<decimal> QualityPMRating { get; set; }
                new global::System.Nullable<decimal> QualityPeerReview { get; set; }
                new string QualityProjectDuration { get; set; }
                new global::System.Nullable<decimal> QualityAverage { get; set; }
                new global::System.Collections.IEnumerable EmployeeProjects { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectsInCompany { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static int _EmpID_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, int v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>.Entry(
                        "ProjectID",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectID_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectID_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static bool _ProjectID_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.ProjectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectID_Validate(r);
                }
                private static int _ProjectID_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectID;
                }
                private static void _ProjectID_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ProjectID = v;
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.ProjectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Entry(
                        "ProjectName",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static bool _ProjectName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.ProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectName_Validate(r);
                }
                private static string _ProjectName_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectName;
                }
                private static void _ProjectName_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectName = v;
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.ProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Entry
                    ProjectType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Entry(
                        "ProjectType",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectType_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectType_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectType_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectType_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectType_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectType_OnValueChanged);
                private static void _ProjectType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectType, sf);
                }
                private static bool _ProjectType_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.ProjectType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectType_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectType_Validate(r);
                }
                private static string _ProjectType_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectType;
                }
                private static void _ProjectType_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectType = v;
                }
                private static void _ProjectType_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.ProjectType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Entry
                    ProjectStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Entry(
                        "ProjectStatus",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectStatus_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectStatus_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectStatus_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectStatus_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectStatus_OnValueChanged);
                private static void _ProjectStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectStatus, sf);
                }
                private static bool _ProjectStatus_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.ProjectStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectStatus_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectStatus_Validate(r);
                }
                private static string _ProjectStatus_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectStatus;
                }
                private static void _ProjectStatus_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectStatus = v;
                }
                private static void _ProjectStatus_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.ProjectStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.DateTime>.Entry
                    StartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.DateTime>.Entry(
                        "StartDate",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._StartDate_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._StartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._StartDate_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._StartDate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._StartDate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._StartDate_OnValueChanged);
                private static void _StartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._StartDate, sf);
                }
                private static bool _StartDate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.StartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartDate_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartDate_Validate(r);
                }
                private static global::System.DateTime _StartDate_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.StartDate;
                }
                private static void _StartDate_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.StartDate = global::LightSwitchApplication.ProjectDetail.DetailsClass.TruncateDate(v);
                }
                private static void _StartDate_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.StartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    EndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "EndDate",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EndDate_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EndDate_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EndDate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EndDate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EndDate_OnValueChanged);
                private static void _EndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EndDate, sf);
                }
                private static bool _EndDate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.EndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _EndDate_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _EndDate_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.EndDate;
                }
                private static void _EndDate_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.EndDate = global::LightSwitchApplication.ProjectDetail.DetailsClass.TruncateDate(v);
                }
                private static void _EndDate_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.EndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>.Entry
                    ComplexityDifficultyLevel = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>.Entry(
                        "ComplexityDifficultyLevel",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityDifficultyLevel_OnValueChanged);
                private static void _ComplexityDifficultyLevel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ComplexityDifficultyLevel, sf);
                }
                private static bool _ComplexityDifficultyLevel_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.ComplexityDifficultyLevel_IsReadOnly(ref result);
                    return result;
                }
                private static void _ComplexityDifficultyLevel_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ComplexityDifficultyLevel_Validate(r);
                }
                private static decimal _ComplexityDifficultyLevel_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ComplexityDifficultyLevel;
                }
                private static void _ComplexityDifficultyLevel_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.ComplexityDifficultyLevel = v;
                }
                private static void _ComplexityDifficultyLevel_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.ComplexityDifficultyLevel_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>.Entry
                    ComplexityScope = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>.Entry(
                        "ComplexityScope",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityScope_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityScope_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityScope_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityScope_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityScope_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityScope_OnValueChanged);
                private static void _ComplexityScope_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ComplexityScope, sf);
                }
                private static bool _ComplexityScope_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.ComplexityScope_IsReadOnly(ref result);
                    return result;
                }
                private static void _ComplexityScope_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ComplexityScope_Validate(r);
                }
                private static decimal _ComplexityScope_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ComplexityScope;
                }
                private static void _ComplexityScope_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.ComplexityScope = v;
                }
                private static void _ComplexityScope_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.ComplexityScope_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ComplexityAvg = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ComplexityAvg",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityAvg_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityAvg_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityAvg_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityAvg_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityAvg_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ComplexityAvg_OnValueChanged);
                private static void _ComplexityAvg_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ComplexityAvg, sf);
                }
                private static bool _ComplexityAvg_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.ComplexityAvg_IsReadOnly(ref result);
                    return result;
                }
                private static void _ComplexityAvg_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ComplexityAvg_Validate(r);
                }
                private static global::System.Nullable<decimal> _ComplexityAvg_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ComplexityAvg;
                }
                private static void _ComplexityAvg_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ComplexityAvg = v;
                }
                private static void _ComplexityAvg_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.ComplexityAvg_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    QualityPMRating = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "QualityPMRating",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPMRating_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPMRating_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPMRating_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPMRating_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPMRating_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPMRating_OnValueChanged);
                private static void _QualityPMRating_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._QualityPMRating, sf);
                }
                private static bool _QualityPMRating_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.QualityPMRating_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualityPMRating_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualityPMRating_Validate(r);
                }
                private static global::System.Nullable<decimal> _QualityPMRating_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.QualityPMRating;
                }
                private static void _QualityPMRating_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.QualityPMRating = v;
                }
                private static void _QualityPMRating_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.QualityPMRating_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    QualityPeerReview = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "QualityPeerReview",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPeerReview_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPeerReview_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPeerReview_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPeerReview_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPeerReview_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityPeerReview_OnValueChanged);
                private static void _QualityPeerReview_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._QualityPeerReview, sf);
                }
                private static bool _QualityPeerReview_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.QualityPeerReview_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualityPeerReview_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualityPeerReview_Validate(r);
                }
                private static global::System.Nullable<decimal> _QualityPeerReview_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.QualityPeerReview;
                }
                private static void _QualityPeerReview_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.QualityPeerReview = v;
                }
                private static void _QualityPeerReview_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.QualityPeerReview_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Entry
                    QualityProjectDuration = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Entry(
                        "QualityProjectDuration",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityProjectDuration_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityProjectDuration_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityProjectDuration_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityProjectDuration_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityProjectDuration_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityProjectDuration_OnValueChanged);
                private static void _QualityProjectDuration_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._QualityProjectDuration, sf);
                }
                private static bool _QualityProjectDuration_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.QualityProjectDuration_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualityProjectDuration_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualityProjectDuration_Validate(r);
                }
                private static string _QualityProjectDuration_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.QualityProjectDuration;
                }
                private static void _QualityProjectDuration_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.QualityProjectDuration = v;
                }
                private static void _QualityProjectDuration_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.QualityProjectDuration_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    QualityAverage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "QualityAverage",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityAverage_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityAverage_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityAverage_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityAverage_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityAverage_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._QualityAverage_OnValueChanged);
                private static void _QualityAverage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._QualityAverage, sf);
                }
                private static bool _QualityAverage_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.QualityAverage_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualityAverage_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualityAverage_Validate(r);
                }
                private static global::System.Nullable<decimal> _QualityAverage_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.QualityAverage;
                }
                private static void _QualityAverage_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.QualityAverage = v;
                }
                private static void _QualityAverage_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.QualityAverage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.EmployeeProject>.Entry
                    EmployeeProjects = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.EmployeeProject>.Entry(
                        "EmployeeProjects",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmployeeProjects_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmployeeProjects_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._EmployeeProjects_GetEntityCollection);
                private static void _EmployeeProjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.EmployeeProject>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeProjects, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeProject> _EmployeeProjects_GetReferencedEntities(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.EmployeeProject, global::LightSwitchApplication.EmployeeProject.DetailsClass>(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.EmployeeProjects, ref d._EmployeeProjects);
                }
                private static global::System.Collections.IEnumerable _EmployeeProjects_GetEntityCollection(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeProjects;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.ProjectsInCompany>.Entry
                    ProjectsInCompany = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.ProjectsInCompany>.Entry(
                        "ProjectsInCompany",
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectsInCompany_Stub,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectsInCompany_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectsInCompany_Validate,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectsInCompany_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectsInCompany_GetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectsInCompany_SetImplementationValue,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectsInCompany_Refresh,
                        global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties._ProjectsInCompany_OnValueChanged);
                private static void _ProjectsInCompany_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.ProjectsInCompany>.Data> c, global::LightSwitchApplication.ProjectDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectsInCompany, sf);
                }
                private static bool _ProjectsInCompany_ComputeIsReadOnly(global::LightSwitchApplication.ProjectDetail e)
                {
                    bool result = false;
                    e.ProjectsInCompany_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectsInCompany_Validate(global::LightSwitchApplication.ProjectDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectsInCompany_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectsInCompany_GetCoreImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectsInCompany;
                }
                private static global::LightSwitchApplication.ProjectsInCompany _ProjectsInCompany_GetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectsInCompany, global::LightSwitchApplication.ProjectsInCompany.DetailsClass>(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectsInCompany, ref d._ProjectsInCompany);
                }
                private static void _ProjectsInCompany_SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass d, global::LightSwitchApplication.ProjectsInCompany v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectsInCompany, ref d._ProjectsInCompany, (i, ev) => i.ProjectsInCompany = ev, v);
                }
                private static void _ProjectsInCompany_Refresh(global::LightSwitchApplication.ProjectDetail.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectDetail.DetailsClass.PropertySetProperties.ProjectsInCompany, ref d._ProjectsInCompany);
                }
                private static void _ProjectsInCompany_OnValueChanged(global::LightSwitchApplication.ProjectDetail e)
                {
                    e.ProjectsInCompany_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, int>.Data _ProjectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Data _ProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Data _ProjectType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Data _ProjectStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.DateTime>.Data _StartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _EndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>.Data _ComplexityDifficultyLevel;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, decimal>.Data _ComplexityScope;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Data _ComplexityAvg;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Data _QualityPMRating;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Data _QualityPeerReview;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, string>.Data _QualityProjectDuration;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::System.Nullable<decimal>>.Data _QualityAverage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.EmployeeProject>.Data _EmployeeProjects;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectDetail, global::LightSwitchApplication.ProjectDetail.DetailsClass, global::LightSwitchApplication.ProjectsInCompany>.Data _ProjectsInCompany;
            
        }
    
        #endregion
    }
    
    #endregion
}
