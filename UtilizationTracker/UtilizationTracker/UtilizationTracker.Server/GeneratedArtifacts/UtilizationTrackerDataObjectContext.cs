//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EmployeeDetails_ManagerID", "EmployeeDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.EmployeeDetail), "EmployeeDetails1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeDetail), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EmployeeMonth_EmployeeDetails", "EmployeeDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.EmployeeDetail), "EmployeeMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeMonth), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_AssignProjects_EmployeeDetails", "EmployeeDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.EmployeeDetail), "AssignProjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.AssignProject), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Months_EmployeeMonth", "Months", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Months), "EmployeeMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeMonth), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Months_EmployeeProject", "Months", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Months), "EmployeeProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeProject), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EmployeeProject_ProjectDetails", "ProjectDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.ProjectDetail), "EmployeeProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeProject), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_AssignProjects_ProjectsInCompany", "ProjectsInCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.ProjectsInCompany), "AssignProjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.AssignProject), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProjectDetails_ProjectsInCompany", "ProjectsInCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.ProjectsInCompany), "ProjectDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ProjectDetail), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UtilizationTrackerData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UtilizationTrackerData object using the connection string found in the 'UtilizationTrackerData' section of the application configuration file.
        /// </summary>
        public UtilizationTrackerData() : base("name=UtilizationTrackerData", "UtilizationTrackerData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UtilizationTrackerData object.
        /// </summary>
        public UtilizationTrackerData(string connectionString) : base(connectionString, "UtilizationTrackerData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UtilizationTrackerData object.
        /// </summary>
        public UtilizationTrackerData(EntityConnection connection) : base(connection, "UtilizationTrackerData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssignProject> AssignProjects
        {
            get
            {
                if ((_AssignProjects == null))
                {
                    _AssignProjects = base.CreateObjectSet<AssignProject>("AssignProjects");
                }
                return _AssignProjects;
            }
        }
        private ObjectSet<AssignProject> _AssignProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AvgUtilization> AvgUtilizations
        {
            get
            {
                if ((_AvgUtilizations == null))
                {
                    _AvgUtilizations = base.CreateObjectSet<AvgUtilization>("AvgUtilizations");
                }
                return _AvgUtilizations;
            }
        }
        private ObjectSet<AvgUtilization> _AvgUtilizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyProject> CompanyProjects
        {
            get
            {
                if ((_CompanyProjects == null))
                {
                    _CompanyProjects = base.CreateObjectSet<CompanyProject>("CompanyProjects");
                }
                return _CompanyProjects;
            }
        }
        private ObjectSet<CompanyProject> _CompanyProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyTeamProject> CompanyTeamProjects
        {
            get
            {
                if ((_CompanyTeamProjects == null))
                {
                    _CompanyTeamProjects = base.CreateObjectSet<CompanyTeamProject>("CompanyTeamProjects");
                }
                return _CompanyTeamProjects;
            }
        }
        private ObjectSet<CompanyTeamProject> _CompanyTeamProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ComplexityandQualityShare> ComplexityandQualityShares
        {
            get
            {
                if ((_ComplexityandQualityShares == null))
                {
                    _ComplexityandQualityShares = base.CreateObjectSet<ComplexityandQualityShare>("ComplexityandQualityShares");
                }
                return _ComplexityandQualityShares;
            }
        }
        private ObjectSet<ComplexityandQualityShare> _ComplexityandQualityShares;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DistinctProject> DistinctProjects
        {
            get
            {
                if ((_DistinctProjects == null))
                {
                    _DistinctProjects = base.CreateObjectSet<DistinctProject>("DistinctProjects");
                }
                return _DistinctProjects;
            }
        }
        private ObjectSet<DistinctProject> _DistinctProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailDropdown> EmailDropdowns
        {
            get
            {
                if ((_EmailDropdowns == null))
                {
                    _EmailDropdowns = base.CreateObjectSet<EmailDropdown>("EmailDropdowns");
                }
                return _EmailDropdowns;
            }
        }
        private ObjectSet<EmailDropdown> _EmailDropdowns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeDetail> EmployeeDetails
        {
            get
            {
                if ((_EmployeeDetails == null))
                {
                    _EmployeeDetails = base.CreateObjectSet<EmployeeDetail>("EmployeeDetails");
                }
                return _EmployeeDetails;
            }
        }
        private ObjectSet<EmployeeDetail> _EmployeeDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeMonth> EmployeeMonths
        {
            get
            {
                if ((_EmployeeMonths == null))
                {
                    _EmployeeMonths = base.CreateObjectSet<EmployeeMonth>("EmployeeMonths");
                }
                return _EmployeeMonths;
            }
        }
        private ObjectSet<EmployeeMonth> _EmployeeMonths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeProjectHour> EmployeeProjectHours
        {
            get
            {
                if ((_EmployeeProjectHours == null))
                {
                    _EmployeeProjectHours = base.CreateObjectSet<EmployeeProjectHour>("EmployeeProjectHours");
                }
                return _EmployeeProjectHours;
            }
        }
        private ObjectSet<EmployeeProjectHour> _EmployeeProjectHours;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeProject> EmployeeProjects
        {
            get
            {
                if ((_EmployeeProjects == null))
                {
                    _EmployeeProjects = base.CreateObjectSet<EmployeeProject>("EmployeeProjects");
                }
                return _EmployeeProjects;
            }
        }
        private ObjectSet<EmployeeProject> _EmployeeProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GetDateParameter> GetDateParameters
        {
            get
            {
                if ((_GetDateParameters == null))
                {
                    _GetDateParameters = base.CreateObjectSet<GetDateParameter>("GetDateParameters");
                }
                return _GetDateParameters;
            }
        }
        private ObjectSet<GetDateParameter> _GetDateParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HoursPerDay> HoursPerDays
        {
            get
            {
                if ((_HoursPerDays == null))
                {
                    _HoursPerDays = base.CreateObjectSet<HoursPerDay>("HoursPerDays");
                }
                return _HoursPerDays;
            }
        }
        private ObjectSet<HoursPerDay> _HoursPerDays;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Months> Months
        {
            get
            {
                if ((_Months == null))
                {
                    _Months = base.CreateObjectSet<Months>("Months");
                }
                return _Months;
            }
        }
        private ObjectSet<Months> _Months;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PMTeamProject> PMTeamProjects
        {
            get
            {
                if ((_PMTeamProjects == null))
                {
                    _PMTeamProjects = base.CreateObjectSet<PMTeamProject>("PMTeamProjects");
                }
                return _PMTeamProjects;
            }
        }
        private ObjectSet<PMTeamProject> _PMTeamProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectDetail> ProjectDetails
        {
            get
            {
                if ((_ProjectDetails == null))
                {
                    _ProjectDetails = base.CreateObjectSet<ProjectDetail>("ProjectDetails");
                }
                return _ProjectDetails;
            }
        }
        private ObjectSet<ProjectDetail> _ProjectDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectManagerViewTeamHour> ProjectManagerViewTeamHours
        {
            get
            {
                if ((_ProjectManagerViewTeamHours == null))
                {
                    _ProjectManagerViewTeamHours = base.CreateObjectSet<ProjectManagerViewTeamHour>("ProjectManagerViewTeamHours");
                }
                return _ProjectManagerViewTeamHours;
            }
        }
        private ObjectSet<ProjectManagerViewTeamHour> _ProjectManagerViewTeamHours;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectReport> ProjectReports
        {
            get
            {
                if ((_ProjectReports == null))
                {
                    _ProjectReports = base.CreateObjectSet<ProjectReport>("ProjectReports");
                }
                return _ProjectReports;
            }
        }
        private ObjectSet<ProjectReport> _ProjectReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectsInCompany> ProjectsInCompanies
        {
            get
            {
                if ((_ProjectsInCompanies == null))
                {
                    _ProjectsInCompanies = base.CreateObjectSet<ProjectsInCompany>("ProjectsInCompanies");
                }
                return _ProjectsInCompanies;
            }
        }
        private ObjectSet<ProjectsInCompany> _ProjectsInCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectsInDay> ProjectsInDays
        {
            get
            {
                if ((_ProjectsInDays == null))
                {
                    _ProjectsInDays = base.CreateObjectSet<ProjectsInDay>("ProjectsInDays");
                }
                return _ProjectsInDays;
            }
        }
        private ObjectSet<ProjectsInDay> _ProjectsInDays;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamProject> TeamProjects
        {
            get
            {
                if ((_TeamProjects == null))
                {
                    _TeamProjects = base.CreateObjectSet<TeamProject>("TeamProjects");
                }
                return _TeamProjects;
            }
        }
        private ObjectSet<TeamProject> _TeamProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamProjectsList> TeamProjectsLists
        {
            get
            {
                if ((_TeamProjectsLists == null))
                {
                    _TeamProjectsLists = base.CreateObjectSet<TeamProjectsList>("TeamProjectsLists");
                }
                return _TeamProjectsLists;
            }
        }
        private ObjectSet<TeamProjectsList> _TeamProjectsLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalHour> TotalHours
        {
            get
            {
                if ((_TotalHours == null))
                {
                    _TotalHours = base.CreateObjectSet<TotalHour>("TotalHours");
                }
                return _TotalHours;
            }
        }
        private ObjectSet<TotalHour> _TotalHours;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalHoursAllMonthsForProject> TotalHoursAllMonthsForProjects
        {
            get
            {
                if ((_TotalHoursAllMonthsForProjects == null))
                {
                    _TotalHoursAllMonthsForProjects = base.CreateObjectSet<TotalHoursAllMonthsForProject>("TotalHoursAllMonthsForProjects");
                }
                return _TotalHoursAllMonthsForProjects;
            }
        }
        private ObjectSet<TotalHoursAllMonthsForProject> _TotalHoursAllMonthsForProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalHoursandProjectShare> TotalHoursandProjectShares
        {
            get
            {
                if ((_TotalHoursandProjectShares == null))
                {
                    _TotalHoursandProjectShares = base.CreateObjectSet<TotalHoursandProjectShare>("TotalHoursandProjectShares");
                }
                return _TotalHoursandProjectShares;
            }
        }
        private ObjectSet<TotalHoursandProjectShare> _TotalHoursandProjectShares;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalHoursofAllProject> TotalHoursofAllProjects
        {
            get
            {
                if ((_TotalHoursofAllProjects == null))
                {
                    _TotalHoursofAllProjects = base.CreateObjectSet<TotalHoursofAllProject>("TotalHoursofAllProjects");
                }
                return _TotalHoursofAllProjects;
            }
        }
        private ObjectSet<TotalHoursofAllProject> _TotalHoursofAllProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalHoursProjectwiseforMonth> TotalHoursProjectwiseforMonths
        {
            get
            {
                if ((_TotalHoursProjectwiseforMonths == null))
                {
                    _TotalHoursProjectwiseforMonths = base.CreateObjectSet<TotalHoursProjectwiseforMonth>("TotalHoursProjectwiseforMonths");
                }
                return _TotalHoursProjectwiseforMonths;
            }
        }
        private ObjectSet<TotalHoursProjectwiseforMonth> _TotalHoursProjectwiseforMonths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalHoursTeamMonthwise> TotalHoursTeamMonthwises
        {
            get
            {
                if ((_TotalHoursTeamMonthwises == null))
                {
                    _TotalHoursTeamMonthwises = base.CreateObjectSet<TotalHoursTeamMonthwise>("TotalHoursTeamMonthwises");
                }
                return _TotalHoursTeamMonthwises;
            }
        }
        private ObjectSet<TotalHoursTeamMonthwise> _TotalHoursTeamMonthwises;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalProjectScore> TotalProjectScores
        {
            get
            {
                if ((_TotalProjectScores == null))
                {
                    _TotalProjectScores = base.CreateObjectSet<TotalProjectScore>("TotalProjectScores");
                }
                return _TotalProjectScores;
            }
        }
        private ObjectSet<TotalProjectScore> _TotalProjectScores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UtilizationCalculation> UtilizationCalculations
        {
            get
            {
                if ((_UtilizationCalculations == null))
                {
                    _UtilizationCalculations = base.CreateObjectSet<UtilizationCalculation>("UtilizationCalculations");
                }
                return _UtilizationCalculations;
            }
        }
        private ObjectSet<UtilizationCalculation> _UtilizationCalculations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UtilizationTracker> UtilizationTrackers
        {
            get
            {
                if ((_UtilizationTrackers == null))
                {
                    _UtilizationTrackers = base.CreateObjectSet<UtilizationTracker>("UtilizationTrackers");
                }
                return _UtilizationTrackers;
            }
        }
        private ObjectSet<UtilizationTracker> _UtilizationTrackers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssignProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignProjects(AssignProject assignProject)
        {
            base.AddObject("AssignProjects", assignProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AvgUtilizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvgUtilizations(AvgUtilization avgUtilization)
        {
            base.AddObject("AvgUtilizations", avgUtilization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyProjects(CompanyProject companyProject)
        {
            base.AddObject("CompanyProjects", companyProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyTeamProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyTeamProjects(CompanyTeamProject companyTeamProject)
        {
            base.AddObject("CompanyTeamProjects", companyTeamProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ComplexityandQualityShares EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComplexityandQualityShares(ComplexityandQualityShare complexityandQualityShare)
        {
            base.AddObject("ComplexityandQualityShares", complexityandQualityShare);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DistinctProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDistinctProjects(DistinctProject distinctProject)
        {
            base.AddObject("DistinctProjects", distinctProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailDropdowns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailDropdowns(EmailDropdown emailDropdown)
        {
            base.AddObject("EmailDropdowns", emailDropdown);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeDetails(EmployeeDetail employeeDetail)
        {
            base.AddObject("EmployeeDetails", employeeDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeMonths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeMonths(EmployeeMonth employeeMonth)
        {
            base.AddObject("EmployeeMonths", employeeMonth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeProjectHours EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeProjectHours(EmployeeProjectHour employeeProjectHour)
        {
            base.AddObject("EmployeeProjectHours", employeeProjectHour);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeProjects(EmployeeProject employeeProject)
        {
            base.AddObject("EmployeeProjects", employeeProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GetDateParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGetDateParameters(GetDateParameter getDateParameter)
        {
            base.AddObject("GetDateParameters", getDateParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HoursPerDays EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHoursPerDays(HoursPerDay hoursPerDay)
        {
            base.AddObject("HoursPerDays", hoursPerDay);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Months EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonths(Months months)
        {
            base.AddObject("Months", months);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PMTeamProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPMTeamProjects(PMTeamProject pMTeamProject)
        {
            base.AddObject("PMTeamProjects", pMTeamProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectDetails(ProjectDetail projectDetail)
        {
            base.AddObject("ProjectDetails", projectDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectManagerViewTeamHours EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectManagerViewTeamHours(ProjectManagerViewTeamHour projectManagerViewTeamHour)
        {
            base.AddObject("ProjectManagerViewTeamHours", projectManagerViewTeamHour);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectReports(ProjectReport projectReport)
        {
            base.AddObject("ProjectReports", projectReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectsInCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectsInCompanies(ProjectsInCompany projectsInCompany)
        {
            base.AddObject("ProjectsInCompanies", projectsInCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectsInDays EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectsInDays(ProjectsInDay projectsInDay)
        {
            base.AddObject("ProjectsInDays", projectsInDay);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamProjects(TeamProject teamProject)
        {
            base.AddObject("TeamProjects", teamProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamProjectsLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamProjectsLists(TeamProjectsList teamProjectsList)
        {
            base.AddObject("TeamProjectsLists", teamProjectsList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalHours EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalHours(TotalHour totalHour)
        {
            base.AddObject("TotalHours", totalHour);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalHoursAllMonthsForProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalHoursAllMonthsForProjects(TotalHoursAllMonthsForProject totalHoursAllMonthsForProject)
        {
            base.AddObject("TotalHoursAllMonthsForProjects", totalHoursAllMonthsForProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalHoursandProjectShares EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalHoursandProjectShares(TotalHoursandProjectShare totalHoursandProjectShare)
        {
            base.AddObject("TotalHoursandProjectShares", totalHoursandProjectShare);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalHoursofAllProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalHoursofAllProjects(TotalHoursofAllProject totalHoursofAllProject)
        {
            base.AddObject("TotalHoursofAllProjects", totalHoursofAllProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalHoursProjectwiseforMonths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalHoursProjectwiseforMonths(TotalHoursProjectwiseforMonth totalHoursProjectwiseforMonth)
        {
            base.AddObject("TotalHoursProjectwiseforMonths", totalHoursProjectwiseforMonth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalHoursTeamMonthwises EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalHoursTeamMonthwises(TotalHoursTeamMonthwise totalHoursTeamMonthwise)
        {
            base.AddObject("TotalHoursTeamMonthwises", totalHoursTeamMonthwise);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalProjectScores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalProjectScores(TotalProjectScore totalProjectScore)
        {
            base.AddObject("TotalProjectScores", totalProjectScore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UtilizationCalculations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilizationCalculations(UtilizationCalculation utilizationCalculation)
        {
            base.AddObject("UtilizationCalculations", utilizationCalculation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UtilizationTrackers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilizationTrackers(UtilizationTracker utilizationTracker)
        {
            base.AddObject("UtilizationTrackers", utilizationTracker);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="AssignProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssignProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssignProject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static AssignProject CreateAssignProject(global::System.Int32 id)
        {
            AssignProject assignProject = new AssignProject();
            assignProject.ID = id;
            return assignProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmpRole
        {
            get
            {
                return _EmpRole;
            }
            set
            {
                OnEmpRoleChanging(value);
                ReportPropertyChanging("EmpRole");
                _EmpRole = value;
                ReportPropertyChanged("EmpRole");
                OnEmpRoleChanged();
            }
        }
        private global::System.String _EmpRole;
        partial void OnEmpRoleChanging(global::System.String value);
        partial void OnEmpRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = value;
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = value;
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectType
        {
            get
            {
                return _ProjectType;
            }
            set
            {
                OnProjectTypeChanging(value);
                ReportPropertyChanging("ProjectType");
                _ProjectType = value;
                ReportPropertyChanged("ProjectType");
                OnProjectTypeChanged();
            }
        }
        private global::System.String _ProjectType;
        partial void OnProjectTypeChanging(global::System.String value);
        partial void OnProjectTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_AssignProjects_EmployeeDetails", "EmployeeDetails")]
        public EmployeeDetail EmployeeDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_AssignProjects_EmployeeDetails", "EmployeeDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_AssignProjects_EmployeeDetails", "EmployeeDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeDetail> EmployeeDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_AssignProjects_EmployeeDetails", "EmployeeDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_AssignProjects_EmployeeDetails", "EmployeeDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_AssignProjects_ProjectsInCompany", "ProjectsInCompany")]
        public ProjectsInCompany ProjectsInCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectsInCompany>("LightSwitchApplication.FK_AssignProjects_ProjectsInCompany", "ProjectsInCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectsInCompany>("LightSwitchApplication.FK_AssignProjects_ProjectsInCompany", "ProjectsInCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectsInCompany> ProjectsInCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectsInCompany>("LightSwitchApplication.FK_AssignProjects_ProjectsInCompany", "ProjectsInCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectsInCompany>("LightSwitchApplication.FK_AssignProjects_ProjectsInCompany", "ProjectsInCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="AvgUtilization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvgUtilization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AvgUtilization object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static AvgUtilization CreateAvgUtilization(global::System.Int32 empID)
        {
            AvgUtilization avgUtilization = new AvgUtilization();
            avgUtilization.EmpID = empID;
            return avgUtilization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AvgUtilization1
        {
            get
            {
                return _AvgUtilization1;
            }
            set
            {
                OnAvgUtilization1Changing(value);
                ReportPropertyChanging("AvgUtilization1");
                _AvgUtilization1 = value;
                ReportPropertyChanged("AvgUtilization1");
                OnAvgUtilization1Changed();
            }
        }
        private Nullable<global::System.Decimal> _AvgUtilization1;
        partial void OnAvgUtilization1Changing(Nullable<global::System.Decimal> value);
        partial void OnAvgUtilization1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CompanyProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyProject object.
        /// </summary>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="projectType">Initial value of the ProjectType property.</param>
        /// <param name="expr1">Initial value of the Expr1 property.</param>
        public static CompanyProject CreateCompanyProject(global::System.String projectName, global::System.String projectType, global::System.Int32 expr1)
        {
            CompanyProject companyProject = new CompanyProject();
            companyProject.ProjectName = projectName;
            companyProject.ProjectType = projectType;
            companyProject.Expr1 = expr1;
            return companyProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = value;
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmpRole
        {
            get
            {
                return _EmpRole;
            }
            set
            {
                OnEmpRoleChanging(value);
                ReportPropertyChanging("EmpRole");
                _EmpRole = value;
                ReportPropertyChanged("EmpRole");
                OnEmpRoleChanged();
            }
        }
        private global::System.String _EmpRole;
        partial void OnEmpRoleChanging(global::System.String value);
        partial void OnEmpRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectType
        {
            get
            {
                return _ProjectType;
            }
            set
            {
                if (_ProjectType != value)
                {
                    OnProjectTypeChanging(value);
                    ReportPropertyChanging("ProjectType");
                    _ProjectType = value;
                    ReportPropertyChanged("ProjectType");
                    OnProjectTypeChanged();
                }
            }
        }
        private global::System.String _ProjectType;
        partial void OnProjectTypeChanging(global::System.String value);
        partial void OnProjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = value;
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                if (_Expr1 != value)
                {
                    OnExpr1Changing(value);
                    ReportPropertyChanging("Expr1");
                    _Expr1 = value;
                    ReportPropertyChanged("Expr1");
                    OnExpr1Changed();
                }
            }
        }
        private global::System.Int32 _Expr1;
        partial void OnExpr1Changing(global::System.Int32 value);
        partial void OnExpr1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CompanyTeamProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyTeamProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyTeamProject object.
        /// </summary>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="complexityDifficultyLevel">Initial value of the ComplexityDifficultyLevel property.</param>
        /// <param name="complexityScope">Initial value of the ComplexityScope property.</param>
        /// <param name="projectType">Initial value of the ProjectType property.</param>
        /// <param name="projectStatus">Initial value of the ProjectStatus property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        public static CompanyTeamProject CreateCompanyTeamProject(global::System.String empName, global::System.Int32 projectID, global::System.String projectName, global::System.Decimal complexityDifficultyLevel, global::System.Decimal complexityScope, global::System.String projectType, global::System.String projectStatus, global::System.DateTime startDate)
        {
            CompanyTeamProject companyTeamProject = new CompanyTeamProject();
            companyTeamProject.EmpName = empName;
            companyTeamProject.ProjectID = projectID;
            companyTeamProject.ProjectName = projectName;
            companyTeamProject.ComplexityDifficultyLevel = complexityDifficultyLevel;
            companyTeamProject.ComplexityScope = complexityScope;
            companyTeamProject.ProjectType = projectType;
            companyTeamProject.ProjectStatus = projectStatus;
            companyTeamProject.StartDate = startDate;
            return companyTeamProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                if (_EmpName != value)
                {
                    OnEmpNameChanging(value);
                    ReportPropertyChanging("EmpName");
                    _EmpName = value;
                    ReportPropertyChanged("EmpName");
                    OnEmpNameChanged();
                }
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityDifficultyLevel
        {
            get
            {
                return _ComplexityDifficultyLevel;
            }
            set
            {
                if (_ComplexityDifficultyLevel != value)
                {
                    OnComplexityDifficultyLevelChanging(value);
                    ReportPropertyChanging("ComplexityDifficultyLevel");
                    _ComplexityDifficultyLevel = value;
                    ReportPropertyChanged("ComplexityDifficultyLevel");
                    OnComplexityDifficultyLevelChanged();
                }
            }
        }
        private global::System.Decimal _ComplexityDifficultyLevel;
        partial void OnComplexityDifficultyLevelChanging(global::System.Decimal value);
        partial void OnComplexityDifficultyLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityScope
        {
            get
            {
                return _ComplexityScope;
            }
            set
            {
                if (_ComplexityScope != value)
                {
                    OnComplexityScopeChanging(value);
                    ReportPropertyChanging("ComplexityScope");
                    _ComplexityScope = value;
                    ReportPropertyChanged("ComplexityScope");
                    OnComplexityScopeChanged();
                }
            }
        }
        private global::System.Decimal _ComplexityScope;
        partial void OnComplexityScopeChanging(global::System.Decimal value);
        partial void OnComplexityScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectType
        {
            get
            {
                return _ProjectType;
            }
            set
            {
                if (_ProjectType != value)
                {
                    OnProjectTypeChanging(value);
                    ReportPropertyChanging("ProjectType");
                    _ProjectType = value;
                    ReportPropertyChanged("ProjectType");
                    OnProjectTypeChanged();
                }
            }
        }
        private global::System.String _ProjectType;
        partial void OnProjectTypeChanging(global::System.String value);
        partial void OnProjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectStatus
        {
            get
            {
                return _ProjectStatus;
            }
            set
            {
                if (_ProjectStatus != value)
                {
                    OnProjectStatusChanging(value);
                    ReportPropertyChanging("ProjectStatus");
                    _ProjectStatus = value;
                    ReportPropertyChanged("ProjectStatus");
                    OnProjectStatusChanged();
                }
            }
        }
        private global::System.String _ProjectStatus;
        partial void OnProjectStatusChanging(global::System.String value);
        partial void OnProjectStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                if (_StartDate != value)
                {
                    OnStartDateChanging(value);
                    ReportPropertyChanging("StartDate");
                    _StartDate = value;
                    ReportPropertyChanged("StartDate");
                    OnStartDateChanged();
                }
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = value;
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ComplexityAvg
        {
            get
            {
                return _ComplexityAvg;
            }
            set
            {
                OnComplexityAvgChanging(value);
                ReportPropertyChanging("ComplexityAvg");
                _ComplexityAvg = value;
                ReportPropertyChanged("ComplexityAvg");
                OnComplexityAvgChanged();
            }
        }
        private Nullable<global::System.Decimal> _ComplexityAvg;
        partial void OnComplexityAvgChanging(Nullable<global::System.Decimal> value);
        partial void OnComplexityAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPMRating
        {
            get
            {
                return _QualityPMRating;
            }
            set
            {
                OnQualityPMRatingChanging(value);
                ReportPropertyChanging("QualityPMRating");
                _QualityPMRating = value;
                ReportPropertyChanged("QualityPMRating");
                OnQualityPMRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPMRating;
        partial void OnQualityPMRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPMRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPeerReview
        {
            get
            {
                return _QualityPeerReview;
            }
            set
            {
                OnQualityPeerReviewChanging(value);
                ReportPropertyChanging("QualityPeerReview");
                _QualityPeerReview = value;
                ReportPropertyChanged("QualityPeerReview");
                OnQualityPeerReviewChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPeerReview;
        partial void OnQualityPeerReviewChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPeerReviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QualityProjectDuration
        {
            get
            {
                return _QualityProjectDuration;
            }
            set
            {
                OnQualityProjectDurationChanging(value);
                ReportPropertyChanging("QualityProjectDuration");
                _QualityProjectDuration = value;
                ReportPropertyChanged("QualityProjectDuration");
                OnQualityProjectDurationChanged();
            }
        }
        private global::System.String _QualityProjectDuration;
        partial void OnQualityProjectDurationChanging(global::System.String value);
        partial void OnQualityProjectDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityAverage
        {
            get
            {
                return _QualityAverage;
            }
            set
            {
                OnQualityAverageChanging(value);
                ReportPropertyChanging("QualityAverage");
                _QualityAverage = value;
                ReportPropertyChanged("QualityAverage");
                OnQualityAverageChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityAverage;
        partial void OnQualityAverageChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignProjectID
        {
            get
            {
                return _AssignProjectID;
            }
            set
            {
                OnAssignProjectIDChanging(value);
                ReportPropertyChanging("AssignProjectID");
                _AssignProjectID = value;
                ReportPropertyChanged("AssignProjectID");
                OnAssignProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AssignProjectID;
        partial void OnAssignProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssignProjectIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ComplexityandQualityShare")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ComplexityandQualityShare : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexityandQualityShare object.
        /// </summary>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="totalHours">Initial value of the TotalHours property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="complexityDifficultyLevel">Initial value of the ComplexityDifficultyLevel property.</param>
        /// <param name="complexityScope">Initial value of the ComplexityScope property.</param>
        public static ComplexityandQualityShare CreateComplexityandQualityShare(global::System.String projectName, global::System.Decimal totalHours, global::System.Int32 empID, global::System.Decimal complexityDifficultyLevel, global::System.Decimal complexityScope)
        {
            ComplexityandQualityShare complexityandQualityShare = new ComplexityandQualityShare();
            complexityandQualityShare.ProjectName = projectName;
            complexityandQualityShare.TotalHours = totalHours;
            complexityandQualityShare.EmpID = empID;
            complexityandQualityShare.ComplexityDifficultyLevel = complexityDifficultyLevel;
            complexityandQualityShare.ComplexityScope = complexityScope;
            return complexityandQualityShare;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalHours
        {
            get
            {
                return _TotalHours;
            }
            set
            {
                OnTotalHoursChanging(value);
                ReportPropertyChanging("TotalHours");
                _TotalHours = value;
                ReportPropertyChanged("TotalHours");
                OnTotalHoursChanged();
            }
        }
        private global::System.Decimal _TotalHours;
        partial void OnTotalHoursChanging(global::System.Decimal value);
        partial void OnTotalHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ProjectShare
        {
            get
            {
                return _ProjectShare;
            }
            set
            {
                OnProjectShareChanging(value);
                ReportPropertyChanging("ProjectShare");
                _ProjectShare = value;
                ReportPropertyChanged("ProjectShare");
                OnProjectShareChanged();
            }
        }
        private Nullable<global::System.Decimal> _ProjectShare;
        partial void OnProjectShareChanging(Nullable<global::System.Decimal> value);
        partial void OnProjectShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ComplexityShare
        {
            get
            {
                return _ComplexityShare;
            }
            set
            {
                OnComplexityShareChanging(value);
                ReportPropertyChanging("ComplexityShare");
                _ComplexityShare = value;
                ReportPropertyChanged("ComplexityShare");
                OnComplexityShareChanged();
            }
        }
        private Nullable<global::System.Decimal> _ComplexityShare;
        partial void OnComplexityShareChanging(Nullable<global::System.Decimal> value);
        partial void OnComplexityShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityShare
        {
            get
            {
                return _QualityShare;
            }
            set
            {
                OnQualityShareChanging(value);
                ReportPropertyChanging("QualityShare");
                _QualityShare = value;
                ReportPropertyChanged("QualityShare");
                OnQualityShareChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityShare;
        partial void OnQualityShareChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ProjectScore
        {
            get
            {
                return _ProjectScore;
            }
            set
            {
                OnProjectScoreChanging(value);
                ReportPropertyChanging("ProjectScore");
                _ProjectScore = value;
                ReportPropertyChanged("ProjectScore");
                OnProjectScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _ProjectScore;
        partial void OnProjectScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnProjectScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ComplexityAvg
        {
            get
            {
                return _ComplexityAvg;
            }
            set
            {
                OnComplexityAvgChanging(value);
                ReportPropertyChanging("ComplexityAvg");
                _ComplexityAvg = value;
                ReportPropertyChanged("ComplexityAvg");
                OnComplexityAvgChanged();
            }
        }
        private Nullable<global::System.Decimal> _ComplexityAvg;
        partial void OnComplexityAvgChanging(Nullable<global::System.Decimal> value);
        partial void OnComplexityAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityAverage
        {
            get
            {
                return _QualityAverage;
            }
            set
            {
                OnQualityAverageChanging(value);
                ReportPropertyChanging("QualityAverage");
                _QualityAverage = value;
                ReportPropertyChanged("QualityAverage");
                OnQualityAverageChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityAverage;
        partial void OnQualityAverageChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityDifficultyLevel
        {
            get
            {
                return _ComplexityDifficultyLevel;
            }
            set
            {
                if (_ComplexityDifficultyLevel != value)
                {
                    OnComplexityDifficultyLevelChanging(value);
                    ReportPropertyChanging("ComplexityDifficultyLevel");
                    _ComplexityDifficultyLevel = value;
                    ReportPropertyChanged("ComplexityDifficultyLevel");
                    OnComplexityDifficultyLevelChanged();
                }
            }
        }
        private global::System.Decimal _ComplexityDifficultyLevel;
        partial void OnComplexityDifficultyLevelChanging(global::System.Decimal value);
        partial void OnComplexityDifficultyLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityScope
        {
            get
            {
                return _ComplexityScope;
            }
            set
            {
                if (_ComplexityScope != value)
                {
                    OnComplexityScopeChanging(value);
                    ReportPropertyChanging("ComplexityScope");
                    _ComplexityScope = value;
                    ReportPropertyChanged("ComplexityScope");
                    OnComplexityScopeChanged();
                }
            }
        }
        private global::System.Decimal _ComplexityScope;
        partial void OnComplexityScopeChanging(global::System.Decimal value);
        partial void OnComplexityScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPMRating
        {
            get
            {
                return _QualityPMRating;
            }
            set
            {
                OnQualityPMRatingChanging(value);
                ReportPropertyChanging("QualityPMRating");
                _QualityPMRating = value;
                ReportPropertyChanged("QualityPMRating");
                OnQualityPMRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPMRating;
        partial void OnQualityPMRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPMRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPeerReview
        {
            get
            {
                return _QualityPeerReview;
            }
            set
            {
                OnQualityPeerReviewChanging(value);
                ReportPropertyChanging("QualityPeerReview");
                _QualityPeerReview = value;
                ReportPropertyChanged("QualityPeerReview");
                OnQualityPeerReviewChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPeerReview;
        partial void OnQualityPeerReviewChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPeerReviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QualityProjectDuration
        {
            get
            {
                return _QualityProjectDuration;
            }
            set
            {
                OnQualityProjectDurationChanging(value);
                ReportPropertyChanging("QualityProjectDuration");
                _QualityProjectDuration = value;
                ReportPropertyChanged("QualityProjectDuration");
                OnQualityProjectDurationChanged();
            }
        }
        private global::System.String _QualityProjectDuration;
        partial void OnQualityProjectDurationChanging(global::System.String value);
        partial void OnQualityProjectDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalofallProjects
        {
            get
            {
                return _TotalofallProjects;
            }
            set
            {
                OnTotalofallProjectsChanging(value);
                ReportPropertyChanging("TotalofallProjects");
                _TotalofallProjects = value;
                ReportPropertyChanged("TotalofallProjects");
                OnTotalofallProjectsChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalofallProjects;
        partial void OnTotalofallProjectsChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalofallProjectsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="DistinctProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DistinctProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DistinctProject object.
        /// </summary>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="expr1">Initial value of the Expr1 property.</param>
        /// <param name="expr2">Initial value of the Expr2 property.</param>
        /// <param name="expr3">Initial value of the Expr3 property.</param>
        /// <param name="complexityDifficultyLevel">Initial value of the ComplexityDifficultyLevel property.</param>
        /// <param name="complexityScope">Initial value of the ComplexityScope property.</param>
        /// <param name="projectType">Initial value of the ProjectType property.</param>
        /// <param name="projectStatus">Initial value of the ProjectStatus property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        public static DistinctProject CreateDistinctProject(global::System.String projectName, global::System.Int32 empID, global::System.Int32 projectID, global::System.String expr1, global::System.Int32 expr2, global::System.Int32 expr3, global::System.Decimal complexityDifficultyLevel, global::System.Decimal complexityScope, global::System.String projectType, global::System.String projectStatus, global::System.DateTime startDate, global::System.String empName)
        {
            DistinctProject distinctProject = new DistinctProject();
            distinctProject.ProjectName = projectName;
            distinctProject.EmpID = empID;
            distinctProject.ProjectID = projectID;
            distinctProject.Expr1 = expr1;
            distinctProject.Expr2 = expr2;
            distinctProject.Expr3 = expr3;
            distinctProject.ComplexityDifficultyLevel = complexityDifficultyLevel;
            distinctProject.ComplexityScope = complexityScope;
            distinctProject.ProjectType = projectType;
            distinctProject.ProjectStatus = projectStatus;
            distinctProject.StartDate = startDate;
            distinctProject.EmpName = empName;
            return distinctProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectManagerID
        {
            get
            {
                return _ProjectManagerID;
            }
            set
            {
                OnProjectManagerIDChanging(value);
                ReportPropertyChanging("ProjectManagerID");
                _ProjectManagerID = value;
                ReportPropertyChanged("ProjectManagerID");
                OnProjectManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectManagerID;
        partial void OnProjectManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                if (_Expr1 != value)
                {
                    OnExpr1Changing(value);
                    ReportPropertyChanging("Expr1");
                    _Expr1 = value;
                    ReportPropertyChanged("Expr1");
                    OnExpr1Changed();
                }
            }
        }
        private global::System.String _Expr1;
        partial void OnExpr1Changing(global::System.String value);
        partial void OnExpr1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Expr2
        {
            get
            {
                return _Expr2;
            }
            set
            {
                if (_Expr2 != value)
                {
                    OnExpr2Changing(value);
                    ReportPropertyChanging("Expr2");
                    _Expr2 = value;
                    ReportPropertyChanged("Expr2");
                    OnExpr2Changed();
                }
            }
        }
        private global::System.Int32 _Expr2;
        partial void OnExpr2Changing(global::System.Int32 value);
        partial void OnExpr2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Expr3
        {
            get
            {
                return _Expr3;
            }
            set
            {
                if (_Expr3 != value)
                {
                    OnExpr3Changing(value);
                    ReportPropertyChanging("Expr3");
                    _Expr3 = value;
                    ReportPropertyChanged("Expr3");
                    OnExpr3Changed();
                }
            }
        }
        private global::System.Int32 _Expr3;
        partial void OnExpr3Changing(global::System.Int32 value);
        partial void OnExpr3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityDifficultyLevel
        {
            get
            {
                return _ComplexityDifficultyLevel;
            }
            set
            {
                if (_ComplexityDifficultyLevel != value)
                {
                    OnComplexityDifficultyLevelChanging(value);
                    ReportPropertyChanging("ComplexityDifficultyLevel");
                    _ComplexityDifficultyLevel = value;
                    ReportPropertyChanged("ComplexityDifficultyLevel");
                    OnComplexityDifficultyLevelChanged();
                }
            }
        }
        private global::System.Decimal _ComplexityDifficultyLevel;
        partial void OnComplexityDifficultyLevelChanging(global::System.Decimal value);
        partial void OnComplexityDifficultyLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityScope
        {
            get
            {
                return _ComplexityScope;
            }
            set
            {
                if (_ComplexityScope != value)
                {
                    OnComplexityScopeChanging(value);
                    ReportPropertyChanging("ComplexityScope");
                    _ComplexityScope = value;
                    ReportPropertyChanged("ComplexityScope");
                    OnComplexityScopeChanged();
                }
            }
        }
        private global::System.Decimal _ComplexityScope;
        partial void OnComplexityScopeChanging(global::System.Decimal value);
        partial void OnComplexityScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectType
        {
            get
            {
                return _ProjectType;
            }
            set
            {
                if (_ProjectType != value)
                {
                    OnProjectTypeChanging(value);
                    ReportPropertyChanging("ProjectType");
                    _ProjectType = value;
                    ReportPropertyChanged("ProjectType");
                    OnProjectTypeChanged();
                }
            }
        }
        private global::System.String _ProjectType;
        partial void OnProjectTypeChanging(global::System.String value);
        partial void OnProjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectStatus
        {
            get
            {
                return _ProjectStatus;
            }
            set
            {
                if (_ProjectStatus != value)
                {
                    OnProjectStatusChanging(value);
                    ReportPropertyChanging("ProjectStatus");
                    _ProjectStatus = value;
                    ReportPropertyChanged("ProjectStatus");
                    OnProjectStatusChanged();
                }
            }
        }
        private global::System.String _ProjectStatus;
        partial void OnProjectStatusChanging(global::System.String value);
        partial void OnProjectStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                if (_StartDate != value)
                {
                    OnStartDateChanging(value);
                    ReportPropertyChanging("StartDate");
                    _StartDate = value;
                    ReportPropertyChanged("StartDate");
                    OnStartDateChanged();
                }
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = value;
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ComplexityAvg
        {
            get
            {
                return _ComplexityAvg;
            }
            set
            {
                OnComplexityAvgChanging(value);
                ReportPropertyChanging("ComplexityAvg");
                _ComplexityAvg = value;
                ReportPropertyChanged("ComplexityAvg");
                OnComplexityAvgChanged();
            }
        }
        private Nullable<global::System.Decimal> _ComplexityAvg;
        partial void OnComplexityAvgChanging(Nullable<global::System.Decimal> value);
        partial void OnComplexityAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPMRating
        {
            get
            {
                return _QualityPMRating;
            }
            set
            {
                OnQualityPMRatingChanging(value);
                ReportPropertyChanging("QualityPMRating");
                _QualityPMRating = value;
                ReportPropertyChanged("QualityPMRating");
                OnQualityPMRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPMRating;
        partial void OnQualityPMRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPMRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPeerReview
        {
            get
            {
                return _QualityPeerReview;
            }
            set
            {
                OnQualityPeerReviewChanging(value);
                ReportPropertyChanging("QualityPeerReview");
                _QualityPeerReview = value;
                ReportPropertyChanged("QualityPeerReview");
                OnQualityPeerReviewChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPeerReview;
        partial void OnQualityPeerReviewChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPeerReviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QualityProjectDuration
        {
            get
            {
                return _QualityProjectDuration;
            }
            set
            {
                OnQualityProjectDurationChanging(value);
                ReportPropertyChanging("QualityProjectDuration");
                _QualityProjectDuration = value;
                ReportPropertyChanged("QualityProjectDuration");
                OnQualityProjectDurationChanged();
            }
        }
        private global::System.String _QualityProjectDuration;
        partial void OnQualityProjectDurationChanging(global::System.String value);
        partial void OnQualityProjectDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityAverage
        {
            get
            {
                return _QualityAverage;
            }
            set
            {
                OnQualityAverageChanging(value);
                ReportPropertyChanging("QualityAverage");
                _QualityAverage = value;
                ReportPropertyChanged("QualityAverage");
                OnQualityAverageChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityAverage;
        partial void OnQualityAverageChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                if (_EmpName != value)
                {
                    OnEmpNameChanging(value);
                    ReportPropertyChanging("EmpName");
                    _EmpName = value;
                    ReportPropertyChanged("EmpName");
                    OnEmpNameChanged();
                }
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmailDropdown")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailDropdown : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailDropdown object.
        /// </summary>
        /// <param name="managerName">Initial value of the ManagerName property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        public static EmailDropdown CreateEmailDropdown(global::System.String managerName, global::System.String empName)
        {
            EmailDropdown emailDropdown = new EmailDropdown();
            emailDropdown.ManagerName = managerName;
            emailDropdown.EmpName = empName;
            return emailDropdown;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = value;
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = value;
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerID;
        partial void OnManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                if (_ManagerName != value)
                {
                    OnManagerNameChanging(value);
                    ReportPropertyChanging("ManagerName");
                    _ManagerName = value;
                    ReportPropertyChanged("ManagerName");
                    OnManagerNameChanged();
                }
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                if (_EmpName != value)
                {
                    OnEmpNameChanging(value);
                    ReportPropertyChanging("EmpName");
                    _EmpName = value;
                    ReportPropertyChanged("EmpName");
                    OnEmpNameChanged();
                }
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmployeeDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeDetail object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="designation">Initial value of the Designation property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="managerID">Initial value of the ManagerID property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        public static EmployeeDetail CreateEmployeeDetail(global::System.Int32 empID, global::System.String empName, global::System.String designation, global::System.String email, global::System.String userName, global::System.Int32 managerID, global::System.String role)
        {
            EmployeeDetail employeeDetail = new EmployeeDetail();
            employeeDetail.EmpID = empID;
            employeeDetail.EmpName = empName;
            employeeDetail.Designation = designation;
            employeeDetail.Email = email;
            employeeDetail.UserName = userName;
            employeeDetail.ManagerID = managerID;
            employeeDetail.Role = role;
            return employeeDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                OnEmpNameChanging(value);
                ReportPropertyChanging("EmpName");
                _EmpName = value;
                ReportPropertyChanged("EmpName");
                OnEmpNameChanged();
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = value;
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = value;
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = value;
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private global::System.Int32 _ManagerID;
        partial void OnManagerIDChanging(global::System.Int32 value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = value;
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeDetails_ManagerID", "EmployeeDetails1")]
        public EntityCollection<EmployeeDetail> EmployeeDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeDetail>("LightSwitchApplication.FK_EmployeeDetails_ManagerID", "EmployeeDetails1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeDetail>("LightSwitchApplication.FK_EmployeeDetails_ManagerID", "EmployeeDetails1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeDetails_ManagerID", "EmployeeDetails")]
        public EmployeeDetail EmployeeDetail1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_EmployeeDetails_ManagerID", "EmployeeDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_EmployeeDetails_ManagerID", "EmployeeDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeDetail> EmployeeDetail1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_EmployeeDetails_ManagerID", "EmployeeDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_EmployeeDetails_ManagerID", "EmployeeDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeMonth_EmployeeDetails", "EmployeeMonth")]
        public EntityCollection<EmployeeMonth> EmployeeMonths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeMonth>("LightSwitchApplication.FK_EmployeeMonth_EmployeeDetails", "EmployeeMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeMonth>("LightSwitchApplication.FK_EmployeeMonth_EmployeeDetails", "EmployeeMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_AssignProjects_EmployeeDetails", "AssignProjects")]
        public EntityCollection<AssignProject> AssignProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignProject>("LightSwitchApplication.FK_AssignProjects_EmployeeDetails", "AssignProjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignProject>("LightSwitchApplication.FK_AssignProjects_EmployeeDetails", "AssignProjects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmployeeMonth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeMonth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeMonth object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        /// <param name="noOfLeaves">Initial value of the NoOfLeaves property.</param>
        public static EmployeeMonth CreateEmployeeMonth(global::System.Int32 empID, global::System.Int32 monthID, global::System.Int32 noOfLeaves)
        {
            EmployeeMonth employeeMonth = new EmployeeMonth();
            employeeMonth.EmpID = empID;
            employeeMonth.MonthID = monthID;
            employeeMonth.NoOfLeaves = noOfLeaves;
            return employeeMonth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                if (_MonthID != value)
                {
                    OnMonthIDChanging(value);
                    ReportPropertyChanging("MonthID");
                    _MonthID = value;
                    ReportPropertyChanged("MonthID");
                    OnMonthIDChanged();
                }
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoOfLeaves
        {
            get
            {
                return _NoOfLeaves;
            }
            set
            {
                OnNoOfLeavesChanging(value);
                ReportPropertyChanging("NoOfLeaves");
                _NoOfLeaves = value;
                ReportPropertyChanged("NoOfLeaves");
                OnNoOfLeavesChanged();
            }
        }
        private global::System.Int32 _NoOfLeaves;
        partial void OnNoOfLeavesChanging(global::System.Int32 value);
        partial void OnNoOfLeavesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeMonth_EmployeeDetails", "EmployeeDetails")]
        public EmployeeDetail EmployeeDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_EmployeeMonth_EmployeeDetails", "EmployeeDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_EmployeeMonth_EmployeeDetails", "EmployeeDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeDetail> EmployeeDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_EmployeeMonth_EmployeeDetails", "EmployeeDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeDetail>("LightSwitchApplication.FK_EmployeeMonth_EmployeeDetails", "EmployeeDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Months_EmployeeMonth", "Months")]
        public Months Months
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Months>("LightSwitchApplication.Months_EmployeeMonth", "Months").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Months>("LightSwitchApplication.Months_EmployeeMonth", "Months").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Months> MonthsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Months>("LightSwitchApplication.Months_EmployeeMonth", "Months");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Months>("LightSwitchApplication.Months_EmployeeMonth", "Months", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmployeeProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeProject object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="subProject">Initial value of the SubProject property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        public static EmployeeProject CreateEmployeeProject(global::System.Int32 empID, global::System.Int32 projectID, global::System.Int32 taskID, global::System.String subProject, global::System.DateTime c_Date, global::System.Decimal hours, global::System.Int32 monthID)
        {
            EmployeeProject employeeProject = new EmployeeProject();
            employeeProject.EmpID = empID;
            employeeProject.ProjectID = projectID;
            employeeProject.TaskID = taskID;
            employeeProject.SubProject = subProject;
            employeeProject.c_Date = c_Date;
            employeeProject.Hours = hours;
            employeeProject.MonthID = monthID;
            return employeeProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = value;
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubProject
        {
            get
            {
                return _SubProject;
            }
            set
            {
                OnSubProjectChanging(value);
                ReportPropertyChanging("SubProject");
                _SubProject = value;
                ReportPropertyChanged("SubProject");
                OnSubProjectChanged();
            }
        }
        private global::System.String _SubProject;
        partial void OnSubProjectChanging(global::System.String value);
        partial void OnSubProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                OnHoursChanging(value);
                ReportPropertyChanging("Hours");
                _Hours = value;
                ReportPropertyChanged("Hours");
                OnHoursChanged();
            }
        }
        private global::System.Decimal _Hours;
        partial void OnHoursChanging(global::System.Decimal value);
        partial void OnHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                OnMonthIDChanging(value);
                ReportPropertyChanging("MonthID");
                _MonthID = value;
                ReportPropertyChanged("MonthID");
                OnMonthIDChanged();
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Months_EmployeeProject", "Months")]
        public Months Months
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Months>("LightSwitchApplication.Months_EmployeeProject", "Months").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Months>("LightSwitchApplication.Months_EmployeeProject", "Months").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Months> MonthsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Months>("LightSwitchApplication.Months_EmployeeProject", "Months");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Months>("LightSwitchApplication.Months_EmployeeProject", "Months", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeProject_ProjectDetails", "ProjectDetails")]
        public ProjectDetail ProjectDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDetail>("LightSwitchApplication.FK_EmployeeProject_ProjectDetails", "ProjectDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDetail>("LightSwitchApplication.FK_EmployeeProject_ProjectDetails", "ProjectDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectDetail> ProjectDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDetail>("LightSwitchApplication.FK_EmployeeProject_ProjectDetails", "ProjectDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectDetail>("LightSwitchApplication.FK_EmployeeProject_ProjectDetails", "ProjectDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmployeeProjectHour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeProjectHour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeProjectHour object.
        /// </summary>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="subProject">Initial value of the SubProject property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        public static EmployeeProjectHour CreateEmployeeProjectHour(global::System.String projectName, global::System.String subProject, global::System.Int32 projectID, global::System.Int32 empID, global::System.Int32 taskID, global::System.DateTime c_Date, global::System.Decimal hours, global::System.String monthName, global::System.String empName)
        {
            EmployeeProjectHour employeeProjectHour = new EmployeeProjectHour();
            employeeProjectHour.ProjectName = projectName;
            employeeProjectHour.SubProject = subProject;
            employeeProjectHour.ProjectID = projectID;
            employeeProjectHour.EmpID = empID;
            employeeProjectHour.TaskID = taskID;
            employeeProjectHour.c_Date = c_Date;
            employeeProjectHour.Hours = hours;
            employeeProjectHour.MonthName = monthName;
            employeeProjectHour.EmpName = empName;
            return employeeProjectHour;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubProject
        {
            get
            {
                return _SubProject;
            }
            set
            {
                if (_SubProject != value)
                {
                    OnSubProjectChanging(value);
                    ReportPropertyChanging("SubProject");
                    _SubProject = value;
                    ReportPropertyChanged("SubProject");
                    OnSubProjectChanged();
                }
            }
        }
        private global::System.String _SubProject;
        partial void OnSubProjectChanging(global::System.String value);
        partial void OnSubProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = value;
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                if (_c_Date != value)
                {
                    Onc_DateChanging(value);
                    ReportPropertyChanging("c_Date");
                    _c_Date = value;
                    ReportPropertyChanged("c_Date");
                    Onc_DateChanged();
                }
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                if (_Hours != value)
                {
                    OnHoursChanging(value);
                    ReportPropertyChanging("Hours");
                    _Hours = value;
                    ReportPropertyChanged("Hours");
                    OnHoursChanged();
                }
            }
        }
        private global::System.Decimal _Hours;
        partial void OnHoursChanging(global::System.Decimal value);
        partial void OnHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                if (_MonthName != value)
                {
                    OnMonthNameChanging(value);
                    ReportPropertyChanging("MonthName");
                    _MonthName = value;
                    ReportPropertyChanged("MonthName");
                    OnMonthNameChanged();
                }
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                if (_EmpName != value)
                {
                    OnEmpNameChanging(value);
                    ReportPropertyChanging("EmpName");
                    _EmpName = value;
                    ReportPropertyChanged("EmpName");
                    OnEmpNameChanged();
                }
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="GetDateParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GetDateParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetDateParameter object.
        /// </summary>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static GetDateParameter CreateGetDateParameter(global::System.DateTime c_Date, global::System.Int32 empID)
        {
            GetDateParameter getDateParameter = new GetDateParameter();
            getDateParameter.c_Date = c_Date;
            getDateParameter.EmpID = empID;
            return getDateParameter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                if (_c_Date != value)
                {
                    Onc_DateChanging(value);
                    ReportPropertyChanging("c_Date");
                    _c_Date = value;
                    ReportPropertyChanged("c_Date");
                    Onc_DateChanged();
                }
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="HoursPerDay")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HoursPerDay : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HoursPerDay object.
        /// </summary>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static HoursPerDay CreateHoursPerDay(global::System.DateTime c_Date, global::System.String monthName, global::System.Int32 empID)
        {
            HoursPerDay hoursPerDay = new HoursPerDay();
            hoursPerDay.c_Date = c_Date;
            hoursPerDay.MonthName = monthName;
            hoursPerDay.EmpID = empID;
            return hoursPerDay;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                if (_c_Date != value)
                {
                    Onc_DateChanging(value);
                    ReportPropertyChanging("c_Date");
                    _c_Date = value;
                    ReportPropertyChanged("c_Date");
                    Onc_DateChanged();
                }
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                if (_MonthName != value)
                {
                    OnMonthNameChanging(value);
                    ReportPropertyChanging("MonthName");
                    _MonthName = value;
                    ReportPropertyChanged("MonthName");
                    OnMonthNameChanged();
                }
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                OnExpr1Changing(value);
                ReportPropertyChanging("Expr1");
                _Expr1 = value;
                ReportPropertyChanged("Expr1");
                OnExpr1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Expr1;
        partial void OnExpr1Changing(Nullable<global::System.Decimal> value);
        partial void OnExpr1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Months")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Months : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Months object.
        /// </summary>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        /// <param name="noOfDays">Initial value of the NoOfDays property.</param>
        /// <param name="weekDays">Initial value of the WeekDays property.</param>
        /// <param name="holidays">Initial value of the Holidays property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static Months CreateMonths(global::System.Int32 monthID, global::System.String monthName, global::System.Int32 noOfDays, global::System.Int32 weekDays, global::System.Int32 holidays, global::System.Int32 year)
        {
            Months months = new Months();
            months.MonthID = monthID;
            months.MonthName = monthName;
            months.NoOfDays = noOfDays;
            months.WeekDays = weekDays;
            months.Holidays = holidays;
            months.Year = year;
            return months;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                if (_MonthID != value)
                {
                    OnMonthIDChanging(value);
                    ReportPropertyChanging("MonthID");
                    _MonthID = value;
                    ReportPropertyChanged("MonthID");
                    OnMonthIDChanged();
                }
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                OnMonthNameChanging(value);
                ReportPropertyChanging("MonthName");
                _MonthName = value;
                ReportPropertyChanged("MonthName");
                OnMonthNameChanged();
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoOfDays
        {
            get
            {
                return _NoOfDays;
            }
            set
            {
                OnNoOfDaysChanging(value);
                ReportPropertyChanging("NoOfDays");
                _NoOfDays = value;
                ReportPropertyChanged("NoOfDays");
                OnNoOfDaysChanged();
            }
        }
        private global::System.Int32 _NoOfDays;
        partial void OnNoOfDaysChanging(global::System.Int32 value);
        partial void OnNoOfDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WeekDays
        {
            get
            {
                return _WeekDays;
            }
            set
            {
                OnWeekDaysChanging(value);
                ReportPropertyChanging("WeekDays");
                _WeekDays = value;
                ReportPropertyChanged("WeekDays");
                OnWeekDaysChanged();
            }
        }
        private global::System.Int32 _WeekDays;
        partial void OnWeekDaysChanging(global::System.Int32 value);
        partial void OnWeekDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Holidays
        {
            get
            {
                return _Holidays;
            }
            set
            {
                OnHolidaysChanging(value);
                ReportPropertyChanging("Holidays");
                _Holidays = value;
                ReportPropertyChanged("Holidays");
                OnHolidaysChanged();
            }
        }
        private global::System.Int32 _Holidays;
        partial void OnHolidaysChanging(global::System.Int32 value);
        partial void OnHolidaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalHours
        {
            get
            {
                return _TotalHours;
            }
            set
            {
                OnTotalHoursChanging(value);
                ReportPropertyChanging("TotalHours");
                _TotalHours = value;
                ReportPropertyChanged("TotalHours");
                OnTotalHoursChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalHours;
        partial void OnTotalHoursChanging(Nullable<global::System.Int32> value);
        partial void OnTotalHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkingDays
        {
            get
            {
                return _WorkingDays;
            }
            set
            {
                OnWorkingDaysChanging(value);
                ReportPropertyChanging("WorkingDays");
                _WorkingDays = value;
                ReportPropertyChanged("WorkingDays");
                OnWorkingDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkingDays;
        partial void OnWorkingDaysChanging(Nullable<global::System.Int32> value);
        partial void OnWorkingDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = value;
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MonthYear
        {
            get
            {
                return _MonthYear;
            }
            set
            {
                OnMonthYearChanging(value);
                ReportPropertyChanging("MonthYear");
                _MonthYear = value;
                ReportPropertyChanged("MonthYear");
                OnMonthYearChanged();
            }
        }
        private global::System.String _MonthYear;
        partial void OnMonthYearChanging(global::System.String value);
        partial void OnMonthYearChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Months_EmployeeMonth", "EmployeeMonth")]
        public EntityCollection<EmployeeMonth> EmployeeMonths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeMonth>("LightSwitchApplication.Months_EmployeeMonth", "EmployeeMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeMonth>("LightSwitchApplication.Months_EmployeeMonth", "EmployeeMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Months_EmployeeProject", "EmployeeProject")]
        public EntityCollection<EmployeeProject> EmployeeProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeProject>("LightSwitchApplication.Months_EmployeeProject", "EmployeeProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeProject>("LightSwitchApplication.Months_EmployeeProject", "EmployeeProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="PMTeamProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PMTeamProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PMTeamProject object.
        /// </summary>
        /// <param name="managerName">Initial value of the ManagerName property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="keyField">Initial value of the KeyField property.</param>
        public static PMTeamProject CreatePMTeamProject(global::System.String managerName, global::System.String empName, global::System.String keyField)
        {
            PMTeamProject pMTeamProject = new PMTeamProject();
            pMTeamProject.ManagerName = managerName;
            pMTeamProject.EmpName = empName;
            pMTeamProject.KeyField = keyField;
            return pMTeamProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                if (_ManagerName != value)
                {
                    OnManagerNameChanging(value);
                    ReportPropertyChanging("ManagerName");
                    _ManagerName = value;
                    ReportPropertyChanged("ManagerName");
                    OnManagerNameChanged();
                }
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = value;
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                if (_EmpName != value)
                {
                    OnEmpNameChanging(value);
                    ReportPropertyChanging("EmpName");
                    _EmpName = value;
                    ReportPropertyChanged("EmpName");
                    OnEmpNameChanged();
                }
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = value;
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = value;
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerID;
        partial void OnManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = value;
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyField
        {
            get
            {
                return _KeyField;
            }
            set
            {
                if (_KeyField != value)
                {
                    OnKeyFieldChanging(value);
                    ReportPropertyChanging("KeyField");
                    _KeyField = value;
                    ReportPropertyChanged("KeyField");
                    OnKeyFieldChanged();
                }
            }
        }
        private global::System.String _KeyField;
        partial void OnKeyFieldChanging(global::System.String value);
        partial void OnKeyFieldChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static Project CreateProject(global::System.String projectName, global::System.Int32 id)
        {
            Project project = new Project();
            project.ProjectName = projectName;
            project.ID = id;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = value;
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MgrID
        {
            get
            {
                return _MgrID;
            }
            set
            {
                OnMgrIDChanging(value);
                ReportPropertyChanging("MgrID");
                _MgrID = value;
                ReportPropertyChanged("MgrID");
                OnMgrIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MgrID;
        partial void OnMgrIDChanging(Nullable<global::System.Int32> value);
        partial void OnMgrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = value;
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProjectDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectDetail object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="projectType">Initial value of the ProjectType property.</param>
        /// <param name="projectStatus">Initial value of the ProjectStatus property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="complexityDifficultyLevel">Initial value of the ComplexityDifficultyLevel property.</param>
        /// <param name="complexityScope">Initial value of the ComplexityScope property.</param>
        public static ProjectDetail CreateProjectDetail(global::System.Int32 empID, global::System.Int32 projectID, global::System.String projectName, global::System.String projectType, global::System.String projectStatus, global::System.DateTime startDate, global::System.Decimal complexityDifficultyLevel, global::System.Decimal complexityScope)
        {
            ProjectDetail projectDetail = new ProjectDetail();
            projectDetail.EmpID = empID;
            projectDetail.ProjectID = projectID;
            projectDetail.ProjectName = projectName;
            projectDetail.ProjectType = projectType;
            projectDetail.ProjectStatus = projectStatus;
            projectDetail.StartDate = startDate;
            projectDetail.ComplexityDifficultyLevel = complexityDifficultyLevel;
            projectDetail.ComplexityScope = complexityScope;
            return projectDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = value;
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectType
        {
            get
            {
                return _ProjectType;
            }
            set
            {
                OnProjectTypeChanging(value);
                ReportPropertyChanging("ProjectType");
                _ProjectType = value;
                ReportPropertyChanged("ProjectType");
                OnProjectTypeChanged();
            }
        }
        private global::System.String _ProjectType;
        partial void OnProjectTypeChanging(global::System.String value);
        partial void OnProjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectStatus
        {
            get
            {
                return _ProjectStatus;
            }
            set
            {
                OnProjectStatusChanging(value);
                ReportPropertyChanging("ProjectStatus");
                _ProjectStatus = value;
                ReportPropertyChanged("ProjectStatus");
                OnProjectStatusChanged();
            }
        }
        private global::System.String _ProjectStatus;
        partial void OnProjectStatusChanging(global::System.String value);
        partial void OnProjectStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = value;
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = value;
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityDifficultyLevel
        {
            get
            {
                return _ComplexityDifficultyLevel;
            }
            set
            {
                OnComplexityDifficultyLevelChanging(value);
                ReportPropertyChanging("ComplexityDifficultyLevel");
                _ComplexityDifficultyLevel = value;
                ReportPropertyChanged("ComplexityDifficultyLevel");
                OnComplexityDifficultyLevelChanged();
            }
        }
        private global::System.Decimal _ComplexityDifficultyLevel;
        partial void OnComplexityDifficultyLevelChanging(global::System.Decimal value);
        partial void OnComplexityDifficultyLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityScope
        {
            get
            {
                return _ComplexityScope;
            }
            set
            {
                OnComplexityScopeChanging(value);
                ReportPropertyChanging("ComplexityScope");
                _ComplexityScope = value;
                ReportPropertyChanged("ComplexityScope");
                OnComplexityScopeChanged();
            }
        }
        private global::System.Decimal _ComplexityScope;
        partial void OnComplexityScopeChanging(global::System.Decimal value);
        partial void OnComplexityScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ComplexityAvg
        {
            get
            {
                return _ComplexityAvg;
            }
            set
            {
                OnComplexityAvgChanging(value);
                ReportPropertyChanging("ComplexityAvg");
                _ComplexityAvg = value;
                ReportPropertyChanged("ComplexityAvg");
                OnComplexityAvgChanged();
            }
        }
        private Nullable<global::System.Decimal> _ComplexityAvg;
        partial void OnComplexityAvgChanging(Nullable<global::System.Decimal> value);
        partial void OnComplexityAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPMRating
        {
            get
            {
                return _QualityPMRating;
            }
            set
            {
                OnQualityPMRatingChanging(value);
                ReportPropertyChanging("QualityPMRating");
                _QualityPMRating = value;
                ReportPropertyChanged("QualityPMRating");
                OnQualityPMRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPMRating;
        partial void OnQualityPMRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPMRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPeerReview
        {
            get
            {
                return _QualityPeerReview;
            }
            set
            {
                OnQualityPeerReviewChanging(value);
                ReportPropertyChanging("QualityPeerReview");
                _QualityPeerReview = value;
                ReportPropertyChanged("QualityPeerReview");
                OnQualityPeerReviewChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPeerReview;
        partial void OnQualityPeerReviewChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPeerReviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QualityProjectDuration
        {
            get
            {
                return _QualityProjectDuration;
            }
            set
            {
                OnQualityProjectDurationChanging(value);
                ReportPropertyChanging("QualityProjectDuration");
                _QualityProjectDuration = value;
                ReportPropertyChanged("QualityProjectDuration");
                OnQualityProjectDurationChanged();
            }
        }
        private global::System.String _QualityProjectDuration;
        partial void OnQualityProjectDurationChanging(global::System.String value);
        partial void OnQualityProjectDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityAverage
        {
            get
            {
                return _QualityAverage;
            }
            set
            {
                OnQualityAverageChanging(value);
                ReportPropertyChanging("QualityAverage");
                _QualityAverage = value;
                ReportPropertyChanged("QualityAverage");
                OnQualityAverageChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityAverage;
        partial void OnQualityAverageChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignProjectID
        {
            get
            {
                return _AssignProjectID;
            }
            set
            {
                OnAssignProjectIDChanging(value);
                ReportPropertyChanging("AssignProjectID");
                _AssignProjectID = value;
                ReportPropertyChanged("AssignProjectID");
                OnAssignProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AssignProjectID;
        partial void OnAssignProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssignProjectIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeProject_ProjectDetails", "EmployeeProject")]
        public EntityCollection<EmployeeProject> EmployeeProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeProject>("LightSwitchApplication.FK_EmployeeProject_ProjectDetails", "EmployeeProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeProject>("LightSwitchApplication.FK_EmployeeProject_ProjectDetails", "EmployeeProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProjectDetails_ProjectsInCompany", "ProjectsInCompany")]
        public ProjectsInCompany ProjectsInCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectsInCompany>("LightSwitchApplication.FK_ProjectDetails_ProjectsInCompany", "ProjectsInCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectsInCompany>("LightSwitchApplication.FK_ProjectDetails_ProjectsInCompany", "ProjectsInCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectsInCompany> ProjectsInCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectsInCompany>("LightSwitchApplication.FK_ProjectDetails_ProjectsInCompany", "ProjectsInCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectsInCompany>("LightSwitchApplication.FK_ProjectDetails_ProjectsInCompany", "ProjectsInCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProjectManagerViewTeamHour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectManagerViewTeamHour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectManagerViewTeamHour object.
        /// </summary>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        public static ProjectManagerViewTeamHour CreateProjectManagerViewTeamHour(global::System.String empName, global::System.Int32 projectID, global::System.String projectName)
        {
            ProjectManagerViewTeamHour projectManagerViewTeamHour = new ProjectManagerViewTeamHour();
            projectManagerViewTeamHour.EmpName = empName;
            projectManagerViewTeamHour.ProjectID = projectID;
            projectManagerViewTeamHour.ProjectName = projectName;
            return projectManagerViewTeamHour;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                if (_EmpName != value)
                {
                    OnEmpNameChanging(value);
                    ReportPropertyChanging("EmpName");
                    _EmpName = value;
                    ReportPropertyChanged("EmpName");
                    OnEmpNameChanged();
                }
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                OnExpr1Changing(value);
                ReportPropertyChanging("Expr1");
                _Expr1 = value;
                ReportPropertyChanged("Expr1");
                OnExpr1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Expr1;
        partial void OnExpr1Changing(Nullable<global::System.Decimal> value);
        partial void OnExpr1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProjectReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectReport object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        public static ProjectReport CreateProjectReport(global::System.Int32 empID, global::System.String projectName, global::System.String monthName)
        {
            ProjectReport projectReport = new ProjectReport();
            projectReport.EmpID = empID;
            projectReport.ProjectName = projectName;
            projectReport.MonthName = monthName;
            return projectReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalWorkedHours
        {
            get
            {
                return _TotalWorkedHours;
            }
            set
            {
                OnTotalWorkedHoursChanging(value);
                ReportPropertyChanging("TotalWorkedHours");
                _TotalWorkedHours = value;
                ReportPropertyChanged("TotalWorkedHours");
                OnTotalWorkedHoursChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalWorkedHours;
        partial void OnTotalWorkedHoursChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalWorkedHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                if (_MonthName != value)
                {
                    OnMonthNameChanging(value);
                    ReportPropertyChanging("MonthName");
                    _MonthName = value;
                    ReportPropertyChanged("MonthName");
                    OnMonthNameChanged();
                }
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProjectsInCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectsInCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectsInCompany object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="projectType">Initial value of the ProjectType property.</param>
        public static ProjectsInCompany CreateProjectsInCompany(global::System.Int32 id, global::System.String projectName, global::System.String projectType)
        {
            ProjectsInCompany projectsInCompany = new ProjectsInCompany();
            projectsInCompany.ID = id;
            projectsInCompany.ProjectName = projectName;
            projectsInCompany.ProjectType = projectType;
            return projectsInCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = value;
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectType
        {
            get
            {
                return _ProjectType;
            }
            set
            {
                OnProjectTypeChanging(value);
                ReportPropertyChanging("ProjectType");
                _ProjectType = value;
                ReportPropertyChanged("ProjectType");
                OnProjectTypeChanged();
            }
        }
        private global::System.String _ProjectType;
        partial void OnProjectTypeChanging(global::System.String value);
        partial void OnProjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = value;
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = value;
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_AssignProjects_ProjectsInCompany", "AssignProjects")]
        public EntityCollection<AssignProject> AssignProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignProject>("LightSwitchApplication.FK_AssignProjects_ProjectsInCompany", "AssignProjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignProject>("LightSwitchApplication.FK_AssignProjects_ProjectsInCompany", "AssignProjects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProjectDetails_ProjectsInCompany", "ProjectDetails")]
        public EntityCollection<ProjectDetail> ProjectDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDetail>("LightSwitchApplication.FK_ProjectDetails_ProjectsInCompany", "ProjectDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDetail>("LightSwitchApplication.FK_ProjectDetails_ProjectsInCompany", "ProjectDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProjectsInDay")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectsInDay : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectsInDay object.
        /// </summary>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        /// <param name="subProject">Initial value of the SubProject property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static ProjectsInDay CreateProjectsInDay(global::System.DateTime c_Date, global::System.Decimal hours, global::System.String subProject, global::System.String projectName, global::System.Int32 empID)
        {
            ProjectsInDay projectsInDay = new ProjectsInDay();
            projectsInDay.c_Date = c_Date;
            projectsInDay.Hours = hours;
            projectsInDay.SubProject = subProject;
            projectsInDay.ProjectName = projectName;
            projectsInDay.EmpID = empID;
            return projectsInDay;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                if (_c_Date != value)
                {
                    Onc_DateChanging(value);
                    ReportPropertyChanging("c_Date");
                    _c_Date = value;
                    ReportPropertyChanged("c_Date");
                    Onc_DateChanged();
                }
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                if (_Hours != value)
                {
                    OnHoursChanging(value);
                    ReportPropertyChanging("Hours");
                    _Hours = value;
                    ReportPropertyChanged("Hours");
                    OnHoursChanged();
                }
            }
        }
        private global::System.Decimal _Hours;
        partial void OnHoursChanging(global::System.Decimal value);
        partial void OnHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubProject
        {
            get
            {
                return _SubProject;
            }
            set
            {
                if (_SubProject != value)
                {
                    OnSubProjectChanging(value);
                    ReportPropertyChanging("SubProject");
                    _SubProject = value;
                    ReportPropertyChanged("SubProject");
                    OnSubProjectChanged();
                }
            }
        }
        private global::System.String _SubProject;
        partial void OnSubProjectChanging(global::System.String value);
        partial void OnSubProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TeamProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamProject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="expr1">Initial value of the Expr1 property.</param>
        public static TeamProject CreateTeamProject(global::System.Int32 id, global::System.Int32 expr1)
        {
            TeamProject teamProject = new TeamProject();
            teamProject.ID = id;
            teamProject.Expr1 = expr1;
            return teamProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = value;
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerID;
        partial void OnManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = value;
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emprole1
        {
            get
            {
                return _emprole1;
            }
            set
            {
                Onemprole1Changing(value);
                ReportPropertyChanging("emprole1");
                _emprole1 = value;
                ReportPropertyChanged("emprole1");
                Onemprole1Changed();
            }
        }
        private global::System.String _emprole1;
        partial void Onemprole1Changing(global::System.String value);
        partial void Onemprole1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emprole2
        {
            get
            {
                return _emprole2;
            }
            set
            {
                Onemprole2Changing(value);
                ReportPropertyChanging("emprole2");
                _emprole2 = value;
                ReportPropertyChanged("emprole2");
                Onemprole2Changed();
            }
        }
        private global::System.String _emprole2;
        partial void Onemprole2Changing(global::System.String value);
        partial void Onemprole2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = value;
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                if (_Expr1 != value)
                {
                    OnExpr1Changing(value);
                    ReportPropertyChanging("Expr1");
                    _Expr1 = value;
                    ReportPropertyChanged("Expr1");
                    OnExpr1Changed();
                }
            }
        }
        private global::System.Int32 _Expr1;
        partial void OnExpr1Changing(global::System.Int32 value);
        partial void OnExpr1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TeamProjectsList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamProjectsList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamProjectsList object.
        /// </summary>
        /// <param name="managerName">Initial value of the ManagerName property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="keyField">Initial value of the KeyField property.</param>
        public static TeamProjectsList CreateTeamProjectsList(global::System.String managerName, global::System.String empName, global::System.String keyField)
        {
            TeamProjectsList teamProjectsList = new TeamProjectsList();
            teamProjectsList.ManagerName = managerName;
            teamProjectsList.EmpName = empName;
            teamProjectsList.KeyField = keyField;
            return teamProjectsList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                OnExpr1Changing(value);
                ReportPropertyChanging("Expr1");
                _Expr1 = value;
                ReportPropertyChanged("Expr1");
                OnExpr1Changed();
            }
        }
        private Nullable<global::System.Int32> _Expr1;
        partial void OnExpr1Changing(Nullable<global::System.Int32> value);
        partial void OnExpr1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = value;
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                if (_ManagerName != value)
                {
                    OnManagerNameChanging(value);
                    ReportPropertyChanging("ManagerName");
                    _ManagerName = value;
                    ReportPropertyChanged("ManagerName");
                    OnManagerNameChanged();
                }
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                if (_EmpName != value)
                {
                    OnEmpNameChanging(value);
                    ReportPropertyChanging("EmpName");
                    _EmpName = value;
                    ReportPropertyChanged("EmpName");
                    OnEmpNameChanged();
                }
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = value;
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerID;
        partial void OnManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = value;
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = value;
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyField
        {
            get
            {
                return _KeyField;
            }
            set
            {
                if (_KeyField != value)
                {
                    OnKeyFieldChanging(value);
                    ReportPropertyChanging("KeyField");
                    _KeyField = value;
                    ReportPropertyChanged("KeyField");
                    OnKeyFieldChanged();
                }
            }
        }
        private global::System.String _KeyField;
        partial void OnKeyFieldChanging(global::System.String value);
        partial void OnKeyFieldChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TotalHour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalHour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalHour object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static TotalHour CreateTotalHour(global::System.Int32 empID)
        {
            TotalHour totalHour = new TotalHour();
            totalHour.EmpID = empID;
            return totalHour;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalHours
        {
            get
            {
                return _TotalHours;
            }
            set
            {
                OnTotalHoursChanging(value);
                ReportPropertyChanging("TotalHours");
                _TotalHours = value;
                ReportPropertyChanged("TotalHours");
                OnTotalHoursChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalHours;
        partial void OnTotalHoursChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TotalHoursAllMonthsForProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalHoursAllMonthsForProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalHoursAllMonthsForProject object.
        /// </summary>
        /// <param name="totalHours">Initial value of the TotalHours property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static TotalHoursAllMonthsForProject CreateTotalHoursAllMonthsForProject(global::System.Decimal totalHours, global::System.String projectName, global::System.Int32 empID)
        {
            TotalHoursAllMonthsForProject totalHoursAllMonthsForProject = new TotalHoursAllMonthsForProject();
            totalHoursAllMonthsForProject.TotalHours = totalHours;
            totalHoursAllMonthsForProject.ProjectName = projectName;
            totalHoursAllMonthsForProject.EmpID = empID;
            return totalHoursAllMonthsForProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalHours
        {
            get
            {
                return _TotalHours;
            }
            set
            {
                OnTotalHoursChanging(value);
                ReportPropertyChanging("TotalHours");
                _TotalHours = value;
                ReportPropertyChanged("TotalHours");
                OnTotalHoursChanged();
            }
        }
        private global::System.Decimal _TotalHours;
        partial void OnTotalHoursChanging(global::System.Decimal value);
        partial void OnTotalHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TotalHoursandProjectShare")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalHoursandProjectShare : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalHoursandProjectShare object.
        /// </summary>
        /// <param name="totalHours">Initial value of the TotalHours property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="complexityDifficultyLevel">Initial value of the ComplexityDifficultyLevel property.</param>
        /// <param name="complexityScope">Initial value of the ComplexityScope property.</param>
        public static TotalHoursandProjectShare CreateTotalHoursandProjectShare(global::System.Decimal totalHours, global::System.String projectName, global::System.Int32 empID, global::System.Decimal complexityDifficultyLevel, global::System.Decimal complexityScope)
        {
            TotalHoursandProjectShare totalHoursandProjectShare = new TotalHoursandProjectShare();
            totalHoursandProjectShare.TotalHours = totalHours;
            totalHoursandProjectShare.ProjectName = projectName;
            totalHoursandProjectShare.EmpID = empID;
            totalHoursandProjectShare.ComplexityDifficultyLevel = complexityDifficultyLevel;
            totalHoursandProjectShare.ComplexityScope = complexityScope;
            return totalHoursandProjectShare;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ProjectShare
        {
            get
            {
                return _ProjectShare;
            }
            set
            {
                OnProjectShareChanging(value);
                ReportPropertyChanging("ProjectShare");
                _ProjectShare = value;
                ReportPropertyChanged("ProjectShare");
                OnProjectShareChanged();
            }
        }
        private Nullable<global::System.Decimal> _ProjectShare;
        partial void OnProjectShareChanging(Nullable<global::System.Decimal> value);
        partial void OnProjectShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalHours
        {
            get
            {
                return _TotalHours;
            }
            set
            {
                OnTotalHoursChanging(value);
                ReportPropertyChanging("TotalHours");
                _TotalHours = value;
                ReportPropertyChanged("TotalHours");
                OnTotalHoursChanged();
            }
        }
        private global::System.Decimal _TotalHours;
        partial void OnTotalHoursChanging(global::System.Decimal value);
        partial void OnTotalHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalofallProjects
        {
            get
            {
                return _TotalofallProjects;
            }
            set
            {
                OnTotalofallProjectsChanging(value);
                ReportPropertyChanging("TotalofallProjects");
                _TotalofallProjects = value;
                ReportPropertyChanged("TotalofallProjects");
                OnTotalofallProjectsChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalofallProjects;
        partial void OnTotalofallProjectsChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalofallProjectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ComplexityAvg
        {
            get
            {
                return _ComplexityAvg;
            }
            set
            {
                OnComplexityAvgChanging(value);
                ReportPropertyChanging("ComplexityAvg");
                _ComplexityAvg = value;
                ReportPropertyChanged("ComplexityAvg");
                OnComplexityAvgChanged();
            }
        }
        private Nullable<global::System.Decimal> _ComplexityAvg;
        partial void OnComplexityAvgChanging(Nullable<global::System.Decimal> value);
        partial void OnComplexityAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityAverage
        {
            get
            {
                return _QualityAverage;
            }
            set
            {
                OnQualityAverageChanging(value);
                ReportPropertyChanging("QualityAverage");
                _QualityAverage = value;
                ReportPropertyChanged("QualityAverage");
                OnQualityAverageChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityAverage;
        partial void OnQualityAverageChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityDifficultyLevel
        {
            get
            {
                return _ComplexityDifficultyLevel;
            }
            set
            {
                if (_ComplexityDifficultyLevel != value)
                {
                    OnComplexityDifficultyLevelChanging(value);
                    ReportPropertyChanging("ComplexityDifficultyLevel");
                    _ComplexityDifficultyLevel = value;
                    ReportPropertyChanged("ComplexityDifficultyLevel");
                    OnComplexityDifficultyLevelChanged();
                }
            }
        }
        private global::System.Decimal _ComplexityDifficultyLevel;
        partial void OnComplexityDifficultyLevelChanging(global::System.Decimal value);
        partial void OnComplexityDifficultyLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComplexityScope
        {
            get
            {
                return _ComplexityScope;
            }
            set
            {
                if (_ComplexityScope != value)
                {
                    OnComplexityScopeChanging(value);
                    ReportPropertyChanging("ComplexityScope");
                    _ComplexityScope = value;
                    ReportPropertyChanged("ComplexityScope");
                    OnComplexityScopeChanged();
                }
            }
        }
        private global::System.Decimal _ComplexityScope;
        partial void OnComplexityScopeChanging(global::System.Decimal value);
        partial void OnComplexityScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPMRating
        {
            get
            {
                return _QualityPMRating;
            }
            set
            {
                OnQualityPMRatingChanging(value);
                ReportPropertyChanging("QualityPMRating");
                _QualityPMRating = value;
                ReportPropertyChanged("QualityPMRating");
                OnQualityPMRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPMRating;
        partial void OnQualityPMRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPMRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPeerReview
        {
            get
            {
                return _QualityPeerReview;
            }
            set
            {
                OnQualityPeerReviewChanging(value);
                ReportPropertyChanging("QualityPeerReview");
                _QualityPeerReview = value;
                ReportPropertyChanged("QualityPeerReview");
                OnQualityPeerReviewChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPeerReview;
        partial void OnQualityPeerReviewChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPeerReviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QualityProjectDuration
        {
            get
            {
                return _QualityProjectDuration;
            }
            set
            {
                OnQualityProjectDurationChanging(value);
                ReportPropertyChanging("QualityProjectDuration");
                _QualityProjectDuration = value;
                ReportPropertyChanged("QualityProjectDuration");
                OnQualityProjectDurationChanged();
            }
        }
        private global::System.String _QualityProjectDuration;
        partial void OnQualityProjectDurationChanging(global::System.String value);
        partial void OnQualityProjectDurationChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TotalHoursofAllProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalHoursofAllProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalHoursofAllProject object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static TotalHoursofAllProject CreateTotalHoursofAllProject(global::System.Int32 empID)
        {
            TotalHoursofAllProject totalHoursofAllProject = new TotalHoursofAllProject();
            totalHoursofAllProject.EmpID = empID;
            return totalHoursofAllProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalofallProjects
        {
            get
            {
                return _TotalofallProjects;
            }
            set
            {
                OnTotalofallProjectsChanging(value);
                ReportPropertyChanging("TotalofallProjects");
                _TotalofallProjects = value;
                ReportPropertyChanged("TotalofallProjects");
                OnTotalofallProjectsChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalofallProjects;
        partial void OnTotalofallProjectsChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalofallProjectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TotalHoursProjectwiseforMonth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalHoursProjectwiseforMonth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalHoursProjectwiseforMonth object.
        /// </summary>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        public static TotalHoursProjectwiseforMonth CreateTotalHoursProjectwiseforMonth(global::System.String monthName, global::System.String projectName, global::System.Int32 empID, global::System.Int32 projectID, global::System.Int32 monthID)
        {
            TotalHoursProjectwiseforMonth totalHoursProjectwiseforMonth = new TotalHoursProjectwiseforMonth();
            totalHoursProjectwiseforMonth.MonthName = monthName;
            totalHoursProjectwiseforMonth.ProjectName = projectName;
            totalHoursProjectwiseforMonth.EmpID = empID;
            totalHoursProjectwiseforMonth.ProjectID = projectID;
            totalHoursProjectwiseforMonth.MonthID = monthID;
            return totalHoursProjectwiseforMonth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total_Hours
        {
            get
            {
                return _Total_Hours;
            }
            set
            {
                OnTotal_HoursChanging(value);
                ReportPropertyChanging("Total_Hours");
                _Total_Hours = value;
                ReportPropertyChanged("Total_Hours");
                OnTotal_HoursChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total_Hours;
        partial void OnTotal_HoursChanging(Nullable<global::System.Decimal> value);
        partial void OnTotal_HoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                if (_MonthName != value)
                {
                    OnMonthNameChanging(value);
                    ReportPropertyChanging("MonthName");
                    _MonthName = value;
                    ReportPropertyChanged("MonthName");
                    OnMonthNameChanged();
                }
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                if (_MonthID != value)
                {
                    OnMonthIDChanging(value);
                    ReportPropertyChanging("MonthID");
                    _MonthID = value;
                    ReportPropertyChanged("MonthID");
                    OnMonthIDChanged();
                }
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TotalHoursTeamMonthwise")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalHoursTeamMonthwise : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalHoursTeamMonthwise object.
        /// </summary>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        public static TotalHoursTeamMonthwise CreateTotalHoursTeamMonthwise(global::System.String empName, global::System.Int32 projectID, global::System.String projectName, global::System.Int32 monthID, global::System.String monthName)
        {
            TotalHoursTeamMonthwise totalHoursTeamMonthwise = new TotalHoursTeamMonthwise();
            totalHoursTeamMonthwise.EmpName = empName;
            totalHoursTeamMonthwise.ProjectID = projectID;
            totalHoursTeamMonthwise.ProjectName = projectName;
            totalHoursTeamMonthwise.MonthID = monthID;
            totalHoursTeamMonthwise.MonthName = monthName;
            return totalHoursTeamMonthwise;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                if (_EmpName != value)
                {
                    OnEmpNameChanging(value);
                    ReportPropertyChanging("EmpName");
                    _EmpName = value;
                    ReportPropertyChanged("EmpName");
                    OnEmpNameChanged();
                }
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                if (_ProjectName != value)
                {
                    OnProjectNameChanging(value);
                    ReportPropertyChanging("ProjectName");
                    _ProjectName = value;
                    ReportPropertyChanged("ProjectName");
                    OnProjectNameChanged();
                }
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                OnExpr1Changing(value);
                ReportPropertyChanging("Expr1");
                _Expr1 = value;
                ReportPropertyChanged("Expr1");
                OnExpr1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Expr1;
        partial void OnExpr1Changing(Nullable<global::System.Decimal> value);
        partial void OnExpr1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                if (_MonthID != value)
                {
                    OnMonthIDChanging(value);
                    ReportPropertyChanging("MonthID");
                    _MonthID = value;
                    ReportPropertyChanged("MonthID");
                    OnMonthIDChanged();
                }
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                if (_MonthName != value)
                {
                    OnMonthNameChanging(value);
                    ReportPropertyChanging("MonthName");
                    _MonthName = value;
                    ReportPropertyChanged("MonthName");
                    OnMonthNameChanged();
                }
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TotalProjectScore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalProjectScore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalProjectScore object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static TotalProjectScore CreateTotalProjectScore(global::System.Int32 empID)
        {
            TotalProjectScore totalProjectScore = new TotalProjectScore();
            totalProjectScore.EmpID = empID;
            return totalProjectScore;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ProjectScore
        {
            get
            {
                return _ProjectScore;
            }
            set
            {
                OnProjectScoreChanging(value);
                ReportPropertyChanging("ProjectScore");
                _ProjectScore = value;
                ReportPropertyChanged("ProjectScore");
                OnProjectScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _ProjectScore;
        partial void OnProjectScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnProjectScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UtilizationCalculation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UtilizationCalculation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UtilizationCalculation object.
        /// </summary>
        /// <param name="weekDays">Initial value of the WeekDays property.</param>
        /// <param name="workedHours">Initial value of the WorkedHours property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        /// <param name="holidays">Initial value of the Holidays property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static UtilizationCalculation CreateUtilizationCalculation(global::System.Int32 weekDays, global::System.Decimal workedHours, global::System.Int32 empID, global::System.Int32 monthID, global::System.String monthName, global::System.Int32 holidays, global::System.Int32 year)
        {
            UtilizationCalculation utilizationCalculation = new UtilizationCalculation();
            utilizationCalculation.WeekDays = weekDays;
            utilizationCalculation.WorkedHours = workedHours;
            utilizationCalculation.EmpID = empID;
            utilizationCalculation.MonthID = monthID;
            utilizationCalculation.MonthName = monthName;
            utilizationCalculation.Holidays = holidays;
            utilizationCalculation.Year = year;
            return utilizationCalculation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UtilizationPercentage
        {
            get
            {
                return _UtilizationPercentage;
            }
            set
            {
                OnUtilizationPercentageChanging(value);
                ReportPropertyChanging("UtilizationPercentage");
                _UtilizationPercentage = value;
                ReportPropertyChanged("UtilizationPercentage");
                OnUtilizationPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _UtilizationPercentage;
        partial void OnUtilizationPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnUtilizationPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WeekDays
        {
            get
            {
                return _WeekDays;
            }
            set
            {
                if (_WeekDays != value)
                {
                    OnWeekDaysChanging(value);
                    ReportPropertyChanging("WeekDays");
                    _WeekDays = value;
                    ReportPropertyChanged("WeekDays");
                    OnWeekDaysChanged();
                }
            }
        }
        private global::System.Int32 _WeekDays;
        partial void OnWeekDaysChanging(global::System.Int32 value);
        partial void OnWeekDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkingDays
        {
            get
            {
                return _WorkingDays;
            }
            set
            {
                OnWorkingDaysChanging(value);
                ReportPropertyChanging("WorkingDays");
                _WorkingDays = value;
                ReportPropertyChanged("WorkingDays");
                OnWorkingDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkingDays;
        partial void OnWorkingDaysChanging(Nullable<global::System.Int32> value);
        partial void OnWorkingDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal WorkedHours
        {
            get
            {
                return _WorkedHours;
            }
            set
            {
                OnWorkedHoursChanging(value);
                ReportPropertyChanging("WorkedHours");
                _WorkedHours = value;
                ReportPropertyChanged("WorkedHours");
                OnWorkedHoursChanged();
            }
        }
        private global::System.Decimal _WorkedHours;
        partial void OnWorkedHoursChanging(global::System.Decimal value);
        partial void OnWorkedHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                if (_MonthID != value)
                {
                    OnMonthIDChanging(value);
                    ReportPropertyChanging("MonthID");
                    _MonthID = value;
                    ReportPropertyChanged("MonthID");
                    OnMonthIDChanged();
                }
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                if (_MonthName != value)
                {
                    OnMonthNameChanging(value);
                    ReportPropertyChanging("MonthName");
                    _MonthName = value;
                    ReportPropertyChanged("MonthName");
                    OnMonthNameChanged();
                }
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Holidays
        {
            get
            {
                return _Holidays;
            }
            set
            {
                if (_Holidays != value)
                {
                    OnHolidaysChanging(value);
                    ReportPropertyChanging("Holidays");
                    _Holidays = value;
                    ReportPropertyChanged("Holidays");
                    OnHolidaysChanged();
                }
            }
        }
        private global::System.Int32 _Holidays;
        partial void OnHolidaysChanging(global::System.Int32 value);
        partial void OnHolidaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    OnYearChanging(value);
                    ReportPropertyChanging("Year");
                    _Year = value;
                    ReportPropertyChanged("Year");
                    OnYearChanged();
                }
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UtilizationTracker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UtilizationTracker : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UtilizationTracker object.
        /// </summary>
        /// <param name="workedHours">Initial value of the WorkedHours property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        /// <param name="weekDays">Initial value of the WeekDays property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        /// <param name="holidays">Initial value of the Holidays property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static UtilizationTracker CreateUtilizationTracker(global::System.Decimal workedHours, global::System.Int32 empID, global::System.Int32 monthID, global::System.Int32 weekDays, global::System.String monthName, global::System.Int32 holidays, global::System.Int32 year)
        {
            UtilizationTracker utilizationTracker = new UtilizationTracker();
            utilizationTracker.WorkedHours = workedHours;
            utilizationTracker.EmpID = empID;
            utilizationTracker.MonthID = monthID;
            utilizationTracker.WeekDays = weekDays;
            utilizationTracker.MonthName = monthName;
            utilizationTracker.Holidays = holidays;
            utilizationTracker.Year = year;
            return utilizationTracker;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal WorkedHours
        {
            get
            {
                return _WorkedHours;
            }
            set
            {
                OnWorkedHoursChanging(value);
                ReportPropertyChanging("WorkedHours");
                _WorkedHours = value;
                ReportPropertyChanged("WorkedHours");
                OnWorkedHoursChanged();
            }
        }
        private global::System.Decimal _WorkedHours;
        partial void OnWorkedHoursChanging(global::System.Decimal value);
        partial void OnWorkedHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                if (_MonthID != value)
                {
                    OnMonthIDChanging(value);
                    ReportPropertyChanging("MonthID");
                    _MonthID = value;
                    ReportPropertyChanged("MonthID");
                    OnMonthIDChanged();
                }
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalHours
        {
            get
            {
                return _TotalHours;
            }
            set
            {
                OnTotalHoursChanging(value);
                ReportPropertyChanging("TotalHours");
                _TotalHours = value;
                ReportPropertyChanged("TotalHours");
                OnTotalHoursChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalHours;
        partial void OnTotalHoursChanging(Nullable<global::System.Int32> value);
        partial void OnTotalHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WeekDays
        {
            get
            {
                return _WeekDays;
            }
            set
            {
                if (_WeekDays != value)
                {
                    OnWeekDaysChanging(value);
                    ReportPropertyChanging("WeekDays");
                    _WeekDays = value;
                    ReportPropertyChanged("WeekDays");
                    OnWeekDaysChanged();
                }
            }
        }
        private global::System.Int32 _WeekDays;
        partial void OnWeekDaysChanging(global::System.Int32 value);
        partial void OnWeekDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkingDays
        {
            get
            {
                return _WorkingDays;
            }
            set
            {
                OnWorkingDaysChanging(value);
                ReportPropertyChanging("WorkingDays");
                _WorkingDays = value;
                ReportPropertyChanged("WorkingDays");
                OnWorkingDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkingDays;
        partial void OnWorkingDaysChanging(Nullable<global::System.Int32> value);
        partial void OnWorkingDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                if (_MonthName != value)
                {
                    OnMonthNameChanging(value);
                    ReportPropertyChanging("MonthName");
                    _MonthName = value;
                    ReportPropertyChanged("MonthName");
                    OnMonthNameChanged();
                }
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Holidays
        {
            get
            {
                return _Holidays;
            }
            set
            {
                if (_Holidays != value)
                {
                    OnHolidaysChanging(value);
                    ReportPropertyChanging("Holidays");
                    _Holidays = value;
                    ReportPropertyChanged("Holidays");
                    OnHolidaysChanged();
                }
            }
        }
        private global::System.Int32 _Holidays;
        partial void OnHolidaysChanging(global::System.Int32 value);
        partial void OnHolidaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    OnYearChanging(value);
                    ReportPropertyChanging("Year");
                    _Year = value;
                    ReportPropertyChanged("Year");
                    OnYearChanged();
                }
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion

    
    }

    #endregion

    
}
